{"version":3,"sources":["dragular.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","dragularModule","directive","dragularService","restrict","link","$scope","iElm","iAttrs","tryJson","json","JSON","parse","options","$eval","dragular","dragularModel","angular","extend","containersModel","./dragularModule",2,"dragularDirective","./dragularDirective.js","./dragularService.js",3,"shared","classesCache","containersCtx","containers","mirror","source","item","copy","sourceItem","sourceModel","target","targetCtx","targetModel","lastDropTarget","offsetX","offsetY","moveX","moveY","offsetXr","offsetYb","clientX","clientY","mirrorWidth","mirrorHeight","initialSibling","currentSibling","initialIndex","currentIndex","isContainerModel","dragOverEvents","lastElementBehindCursor","grabbed","factory","$rootScope","service","arg0","arg1","processServiceArguments","arguments","Array","isArray","isElement","initialContainers","document","querySelectorAll","extendDefaultOptions","classes","defaultClasses","eventNames","defaultEventNames","processOptionsObject","boundingBox","makeArray","nameSpace","forEach","len","shLen","m","registerEvents","remove","op","regEvent","docElm","release","container","grab","name","eventName","doc","createEvent","initEvent","createEventObject","eventType","window","event","whichMouseButton","metaKey","ctrlKey","context","canStart","eventualMovements","type","isInput","focus","preventDefault","ungrab","drake","dragging","getCoord","elementBehindCursor","getElementBehindPoint","dropTarget","findDropTarget","copySortSource","drop","removeOnSpill","cancel","fireEvent","dragularrelease","scope","$emit","isContainer","el","indexOf","removeContainers","all","$applyAsync","changes","index","splice","startBecauseMouseMoved","movements","preventGrabbed","destroy","ignoreInputTextSelection","elementFromPoint","end","start","direction","getParent","parent","parentNode","parentHeight","offsetHeight","parentWidth","offsetWidth","childHeight","clientHeight","childWidth","clientWidth","offset","getOffset","left","top","right","bottom","addClass","transit","renderMirrorImage","style","drag","handle","invalid","moves","nextEl","manualStart","isCopy","cloneNode","dragularcloned","containerIndex","domIndexOf","dragulardrag","invalidTarget","emitDropEvent","isInitialPlacement","dragularcancel","dragulardrop","dropIndex","removeChild","dropElm","dropElmModel","cleanup","dragularremove","revert","reverts","revertOnSpill","initial","insertBefore","removeMirrorImage","rmClass","spillOut","dragularout","dragulardragend","sibling","accepted","accepts","immediate","getImmediateChild","reference","getReference","dragularCommon","canBeAccepted","moved","spillOver","over","changed","out","pageX","pageY","offsetBox","x","y","lockY","lockX","dragularenter","dragularleave","dragularshadow","hide","scrollContainer","before","scrollTop","deltaY","stopPropagation","rect","getBoundingClientRect","width","height","getRectWidth","getRectHeight","mirrorContainer","appendChild","body","unselectable","outside","children","horizontal","inside","resolve","after","getScroll","scrollProp","offsetProp","scrollLeft","point","p","state","className","documentElement","dragularover","always","never","getEmptyObject","fn","touch","mouseup","mousedown","mousemove","$el","element","startIndex","prototype","slice","touches","undefined","buttons","which","button","manually","nextSibling","nodeType","nextElementSibling","HTMLElement","nodeName","lookupClass","cached","lastIndex","RegExp","current","test","replace","trim","getEventHost","targetTouches","changedTouches","coord","host","missMap","originalEvent","tagName","isEditable","contentEditable","child","extra","dispatchEvent","cleanEnviroment"],"mappings":"CAAA,QAAUA,GAAEC,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAATC,UAAqBA,OAAQ,KAAIF,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGI,EAAE,MAAOA,GAAEJ,GAAE,EAAI,IAAIK,GAAE,GAAIC,OAAM,uBAAuBN,EAAE,IAAK,MAAMK,GAAEE,KAAK,mBAAmBF,EAAE,GAAIG,GAAEX,EAAEG,IAAIS,WAAYb,GAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAG,GAAIE,GAAED,EAAEI,GAAG,GAAGL,EAAG,OAAOI,GAAEF,EAAEA,EAAEF,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGS,QAAkD,IAAI,GAA1CL,GAAkB,kBAATD,UAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKa,GAAG,SAAST,EAAQU,EAAOJ,GAEvd,YAMC,IAAIK,GAAiBX,EAAQ,mBAE9BW,GAAeC,UAAU,YAAa,kBAAmB,SAASC,GAChE,OACEC,SAAU,IACVC,KAAM,SAASC,EAAQC,EAAMC,GAI3B,QAASC,GAAQC,GACf,IACE,MAAOC,MAAKC,MAAMF,GAClB,MAAO5B,GACP,QANJ,GAAI+B,GAAUP,EAAOQ,MAAMN,EAAOO,WAAaN,EAAQD,EAAOO,aAU3DP,GAAOQ,cACRH,EAAUI,QAAQC,QAAQC,gBAAiBb,EAAOQ,MAAMN,EAAOQ,gBAAiBH,GACzEA,GAAWA,EAAQM,iBAAsD,gBAA5BN,GAAQM,kBAC5DN,EAAQM,gBAAkBb,EAAOQ,MAAMD,EAAQM,kBAGjDhB,EAAgBI,EAAK,GAAIM,UAK5BO,mBAAmB,IAAIC,GAAG,SAAS/B,EAAQU,EAAOJ,GAErD,YAQAI,GAAOJ,QAAUqB,QAAQjB,OAAO,sBAE9BsB,kBAAoBhC,EAAQ,0BAA0Ba,gBAAkBb,EAAQ,2BAE/EiC,yBAAyB,EAAEC,uBAAuB,IAAIC,GAAG,SAASnC,EAAQU,EAAOJ,GAEpF,YAOA,IAAIK,GAAiBX,EAAQ,oBAC3BoC,GACIC,gBACAC,iBACAC,cACAC,OAAQ,KACRC,OAAQ,KACRC,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,eAAgB,KAChBC,QAAS,KACTC,QAAS,KACTC,MAAO,KACPC,MAAO,KACPC,SAAU,KACVC,SAAU,KACVC,QAAS,KACTC,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,eAAgB,KAChBC,eAAgB,KAChBC,aAAc,KACdC,aAAc,KACdC,iBAAkB,KAClBC,kBACAC,wBAAyB,KACzBC,QAAS,KAGfxD,GAAeyD,QAAQ,mBAAoB,aAAc,SAAiCC,GAcxF,QAASC,GAAQC,EAAMC,GA2FrB,QAASC,KACkB,IAArBC,UAAUlE,QACTmE,MAAMC,QAAQL,IACd5C,QAAQkD,UAAUN,IAClBA,EAAK,IACU,gBAATA,GAIgB,gBAATA,KAChBO,GAAoBC,SAASC,iBAAiBT,KAH9ChD,GAAUgD,MACVO,OAMJ,QAASG,KACPtD,QAAQC,OAAO/B,GAAG0B,IACfA,GAAQ2D,UACTrF,GAAEqF,QAAUvD,QAAQC,UAAWuD,GAAgB5D,GAAQ2D,UAEtD3D,GAAQ6D,aACTvF,GAAEuF,WAAazD,QAAQC,UAAWyD,GAAmB9D,GAAQ6D,aAIjE,QAASE,KAEFT,EAAUhF,GAAE0F,eACf1F,GAAE0F,aAAc,GAIf1F,GAAE0C,aACHuC,GAAoBjF,GAAE0C,YAGxBuC,GAAoBU,EAAUV,IAG1BH,MAAMC,QAAQ/E,GAAEgC,iBAElBhC,GAAEgC,gBAAkB8C,MAAMC,QAAQ/E,GAAEgC,gBAAgB,IAAMhC,GAAEgC,iBAAmBhC,GAAEgC,iBAEjFhC,GAAEgC,mBAIChC,GAAE4F,YACL5F,GAAE4F,WAAa,mBAEZd,MAAMC,QAAQ/E,GAAE4F,aACnB5F,GAAE4F,WAAa5F,GAAE4F,YAEnB5F,GAAE4F,UAAUC,QAAQ,SAAuBD,GACpCrD,EAAOG,WAAWkD,KACrBrD,EAAOG,WAAWkD,MAClBrD,EAAOE,cAAcmD,MAIvB,KAAK,GAFDE,GAAMb,GAAkBtE,OAC1BoF,EAAQxD,EAAOG,WAAWkD,GAAWjF,OAC9BP,EAAI,EAAO0F,EAAJ1F,EAASA,IACvBmC,EAAOG,WAAWkD,GAAWxF,EAAI2F,GAASd,GAAkB7E,GAC5DmC,EAAOE,cAAcmD,GAAWxF,EAAI2F,IAClC/F,EAAGA,GACHgG,EAAGhG,GAAEgC,gBAAgB5B,MAM7B,QAAS6F,GAAeC,GACtB,GAAIC,GAAKD,EAAS,MAAQ,IAC1BE,GAASC,GAAQF,EAAI,UAAWG,GAGhCrB,GAAkBY,QAAQ,SAAsBU,GAC9CH,EAASG,EAAW,KAAM,YAAaC,KAGrCN,GACFpE,QAAQ+D,SAAS,gBAAiB,gBAAiB,mBAAoB,SAA+BY,GACpG,GAAIC,GAAY1G,GAAEuF,WAAWkB,EACzBlE,GAAO6B,eAAesC,KACpBC,GAAIC,aACNrE,EAAO6B,eAAesC,GAAaC,GAAIC,YAAY,cACnDrE,EAAO6B,eAAesC,GAAWG,UAAUH,GAAW,GAAM,KAE5DnE,EAAO6B,eAAesC,GAAaC,GAAIG,oBACvCvE,EAAO6B,eAAesC,GAAWK,UAAYL,MASvD,QAASF,GAAK7G,GAMZ,GALAA,EAAIA,GAAKqH,OAAOC,MAChB1E,EAAOgB,MAAQ5D,EAAEgE,QACjBpB,EAAOiB,MAAQ7D,EAAEiE,QAGW,IAAxBsD,EAAiBvH,KAAYA,EAAEwH,UAAWxH,EAAEyH,QAAhD,CAIA,GAAIC,GAAUC,EAAS3H,EAAEsD,OACpBoE,IAAYA,EAAQxE,OAIzBN,EAAO+B,QAAU+C,EACjBE,IACe,cAAX5H,EAAE6H,OACAC,EAAQJ,EAAQxE,MAClBwE,EAAQxE,KAAK6E,QAEb/H,EAAEgI,oBAKR,QAASrB,GAAQ3G,GAEf,GADAiI,IACKC,GAAMC,SAAX,CAGAnI,EAAIA,GAAKqH,OAAOC,MAEhB1E,EAAOoB,QAAUoE,EAAS,UAAWpI,GACrC4C,EAAOqB,QAAUmE,EAAS,UAAWpI,EAErC,IAAIqI,GAAsBC,GAAsB1F,EAAOI,OAAQJ,EAAOoB,QAASpB,EAAOqB,SACpFsE,EAAaC,EAAeH,EAAqBzF,EAAOoB,QAASpB,EAAOqB,QAEtEsE,KAAgB3F,EAAOO,MAAQ9C,GAAEoI,iBAAqB7F,EAAOO,MAAQoF,IAAe3F,EAAOK,QAE7FyF,EAAK9F,EAAOM,KAAMqF,GACTlI,GAAEsI,cACXpC,IAEAqC,IAIFhG,EAAOU,OAAS,KAEZV,EAAO8B,yBACTmE,EAAUjG,EAAO8B,wBAAyB9B,EAAO6B,eAAeqE,gBAAiBT,GAG/EhI,GAAE0I,OACJ1I,GAAE0I,MAAMC,MAAM3I,GAAEuF,WAAWkD,gBAAiBlG,EAAOM,KAAMN,EAAOK,SAMpE,QAASgG,GAAYC,GACnB,IAAIA,EACF,OAAO,CAGT,KADA,GAAIzI,GAAIJ,GAAE4F,UAAUjF,OACbP,KACL,GAAsD,KAAlDmC,EAAOG,WAAW1C,GAAE4F,UAAUxF,IAAI0I,QAAQD,GAC5C,OAAO,CAGX,OAAI7I,IAAE4I,YAAYC,IAChBtG,EAAO4B,iBAAmBnE,GAAEmE,iBAAiB0E,IACtC,IAEPtG,EAAO4B,iBAAmB,MAErB,GAMT,QAAS4E,GAAiBC,GACxBxE,EAAWyE,YAAY,WACrB,GAAIC,GAAUpE,MAAMC,QAAQiE,GAAOA,EAAMrD,EAAUqD,EACnDE,GAAQrD,QAAQ,SAA0BU,GACxCzE,QAAQ+D,QAAQ7F,GAAE4F,UAAW,SAAmBA,GAC9C,GAAIuD,EACJA,GAAQ5G,EAAOG,WAAWkD,GAAWkD,QAAQvC,GAC7ChE,EAAOG,WAAWkD,GAAWwD,OAAOD,EAAO,GAC3C5G,EAAOE,cAAcmD,GAAWwD,OAAOD,EAAO,SAMtD,QAAS5B,GAAkBrB,GACzB,GAAIC,GAAKD,EAAS,MAAQ,IAC1BE,GAASC,GAAQF,EAAI,YAAakD,GAGpC,QAASC,GAAUpD,GACjB,GAAIC,GAAKD,EAAS,MAAQ,IAC1BE,GAASC,GAAQF,EAAI,cAAeoD,GACpCnD,EAASC,GAAQF,EAAI,QAASoD,GAC9BnD,EAASC,GAAQF,EAAI,YAAaoD,GAGpC,QAASC,KACPvD,GAAe,GACf8C,EAAiB9D,IACjBqB,MAGF,QAASiD,GAAe5J,GAClB4C,EAAO+B,SACT3E,EAAEgI,iBAIN,QAAS0B,GAAuB1J,GAC9B,GAAK4C,EAAO+B,UAAWuD,GAAMC,SAA7B,CAGA,GAA4B,IAAxBZ,EAAiBvH,GAEnB,WADA2G,MAIF,KAAI3G,EAAEgE,SAAWhE,EAAEgE,UAAYpB,EAAOgB,QAAS5D,EAAEiE,SAAWjE,EAAEiE,UAAYrB,EAAOiB,MAAjF,CAGA,GAAIxD,GAAEyJ,yBAA0B,CAC9B,GAAI9F,GAAUoE,EAAS,UAAWpI,GAChCiE,EAAUmE,EAAS,UAAWpI,GAC9BqI,EAAsBrB,GAAI+C,iBAAiB/F,EAASC,EACtD,IAAI6D,EAAQO,GACV,OAIJ,GAAI1D,GAAU/B,EAAO+B,OAOrB,IANAiD,GAAkB,GAClB+B,IACAK,IACAC,EAAMtF,IAGDtE,GAAE6J,WAAaC,EAAUvH,EAAOQ,YAAa,CAChD,GAAIgH,GAASxH,EAAOQ,WAAWiH,WAC7BC,EAAeF,EAAOG,aACtBC,EAAcJ,EAAOK,YACrBC,EAAc9H,EAAOQ,WAAWuH,aAChCC,EAAahI,EAAOQ,WAAWyH,WACjCxK,IAAE6J,UAAyCM,EAAcI,EAA3CN,EAAeI,EAAyC,aAAe,WAIvF,GAAII,GAASC,GAAUnI,EAAOQ,WAC9BR,GAAOc,QAAU0E,EAAS,QAASpI,GAAK8K,EAAOE,KAC/CpI,EAAOe,QAAUyE,EAAS,QAASpI,GAAK8K,EAAOG,IAC/CrI,EAAOoB,QAAUoE,EAAS,UAAWpI,GACrC4C,EAAOqB,QAAUmE,EAAS,UAAWpI,GAGjCK,GAAE0F,cACJnD,EAAOkB,SAAWsE,EAAS,QAASpI,GAAK8K,EAAOI,MAChDtI,EAAOmB,SAAWqE,EAAS,QAASpI,GAAK8K,EAAOK,QAGlDnL,EAAEgI,iBAEFoD,EAASxI,EAAOM,KAAM7C,GAAEqF,QAAQ2F,SAChCC,IAEA1I,EAAOI,OAAOuI,MAAMP,KAAOpI,EAAOoB,QAAUpB,EAAOc,QAAU,KAC7Dd,EAAOI,OAAOuI,MAAMN,IAAMrI,EAAOqB,QAAUrB,EAAOe,QAAU,KAE5D6H,EAAKxL,KAIP,QAAS2H,GAASzE,GAChB,IAAIgF,GAAMC,WAAYvF,EAAOI,OAA7B,CAMA,IAFA,GAAIyI,GAASvI,EAENiH,EAAUjH,KAAU+F,EAAYkB,EAAUjH,KAAQ,CAEvD,GAAI7C,GAAEqL,QAAQxI,EAAMuI,GAClB,MAGF,IADAvI,EAAOiH,EAAUjH,IACZA,EACH,OAIJ,GAAID,GAASkH,EAAUjH,EACvB,IAAKD,IACH5C,GAAEqL,QAAQxI,EAAMuI,IACfpL,GAAEsL,MAAMzI,EAAMD,EAAQwI,EAAQG,EAAO1I,IAIxC,OACEA,KAAMA,EACND,OAAQA,IAIZ,QAAS4I,GAAY3I,GACnB,GAAIwE,GAAUC,EAASzE,EACnBwE,IACFuC,EAAMvC,GAIV,QAASuC,GAAMvC,GACb9E,EAAOQ,WAAaR,EAAOM,KAAOwE,EAAQxE,KAC1CN,EAAOK,OAASyE,EAAQzE,OACxBL,EAAOwB,eAAiBxB,EAAOyB,eAAiBuH,EAAOlE,EAAQxE,MAE3D4I,GAAOpE,EAAQxE,KAAMwE,EAAQzE,SAC/BL,EAAOM,KAAOwE,EAAQxE,KAAK6I,WAAU,GACrCnJ,EAAOO,MAAO,EACV9C,GAAE0I,OACJ1I,GAAE0I,MAAMC,MAAM3I,GAAEuF,WAAWoG,eAAgBpJ,EAAOM,KAAMwE,EAAQxE,OAGlEN,EAAOO,MAAO,CAIhB,IAAI8I,GAAiB3G,GAAkB6D,QAAQzB,EAAQzE,OASvD,OARAL,GAAOS,YAAchD,GAAEgC,gBAAgB4J,GACvCrJ,EAAO0B,aAAe4H,EAAWxE,EAAQxE,KAAMwE,EAAQzE,QAEvDiF,GAAMC,UAAW,EACb9H,GAAE0I,OACJ1I,GAAE0I,MAAMC,MAAM3I,GAAEuF,WAAWuG,aAAcvJ,EAAOQ,WAAYR,EAAOK,SAG9D,EAGT,QAASmJ,KACP,OAAO,EAGT,QAASpC,KACF9B,GAAMC,UAAavF,EAAOM,MAG/BwF,EAAK9F,EAAOM,KAAMiH,EAAUvH,EAAOM,OAGrC,QAAS+E,KACPrF,EAAO+B,SAAU,EACjBiD,EAAkB,UAClB+B,EAAU,UAGZ,QAASjB,GAAKxF,EAAMI,GAyClB,QAAS+I,KACHhM,GAAE0I,QACAuD,EAAmBhJ,GACrBjD,GAAE0I,MAAMC,MAAM3I,GAAEuF,WAAW2G,eAAgBrJ,EAAMN,EAAOK,OAAQL,EAAOS,YAAaT,EAAO0B,cAE3FjE,GAAE0I,MAAMC,MAAM3I,GAAEuF,WAAW4G,aAActJ,EAAMI,EAAQV,EAAOK,OAAQL,EAAOS,YAAaT,EAAO0B,aAAc1B,EAAOY,YAAaiJ,IA7CrI7J,EAAOO,MAAQ9C,GAAEoI,gBAAkBnF,IAAWV,EAAOK,QAAUkH,EAAUjH,IAC3EA,EAAKmH,WAAWqC,YAAY9J,EAAOQ,WAGrC,IAAIqJ,GAAYP,EAAWhJ,EAAMI,EAEjC,IAAIV,EAAOS,cAAgBiJ,EAAmBhJ,GAAS,CACrD,GAAIqJ,GAAUzJ,CACd2B,GAAWyE,YAAY,WACjBhG,IAAWV,EAAOK,OACpBL,EAAOS,YAAYoG,OAAOgD,EAAW,EAAG7J,EAAOS,YAAYoG,OAAO7G,EAAO0B,aAAc,GAAG,KAE1F1B,EAAOgK,aAAehK,EAAOO,KAAOhB,QAAQgB,KAAKP,EAAOS,YAAYT,EAAO0B,eAAiB1B,EAAOS,YAAYT,EAAO0B,cAEjH1B,EAAO4B,iBAGV5B,EAAOY,YAAcZ,EAAO4B,iBAF5B5B,EAAOY,YAAcZ,EAAOW,UAAU8C,EAKxC/C,EAAOoJ,YAAYC,GAEd/J,EAAOO,MACVP,EAAOS,YAAYoG,OAAO7G,EAAO0B,aAAc,GAEjD1B,EAAOY,YAAYiG,OAAOgD,EAAW,EAAG7J,EAAOgK,eAG7CzC,EAAUjH,IACZA,EAAKmH,WAAWqC,YAAYxJ,GAG9BmJ,IACAQ,UAGFR,KACAQ,IAcJ,QAAStG,KACP,GAAK2B,GAAMC,SAAX,CAGA,GAAIiC,GAASD,EAAUvH,EAAOM,KAE1BkH,IACFA,EAAOsC,YAAY9J,EAAOM,MAGxBN,EAAOS,aACTwB,EAAWyE,YAAY,WACrB1G,EAAOS,YAAYoG,OAAO7G,EAAO0B,aAAc,GAC/CuI,MAIAxM,GAAE0I,OACJ1I,GAAE0I,MAAMC,MAAMpG,EAAOO,KAAO9C,GAAEuF,WAAW2G,eAAiBlM,GAAEuF,WAAWkH,eAAgBlK,EAAOM,KAAMkH,EAAQxH,EAAOS,YAAaT,EAAO0B,cAEpI1B,EAAOS,aACVwJ,KAIJ,QAASjE,GAAOmE,GACd,GAAK7E,GAAMC,SAAX,CAGA,GAAI6E,GAAU9H,UAAUlE,OAAS,EAAI+L,EAAS1M,GAAE4M,cAC9C7C,EAASD,EAAUvH,EAAOM,MAExBgK,EAAUZ,EAAmBlC,EAC5B8C,IAAYtK,EAAOO,OAAQ6J,GAC9BpK,EAAOK,OAAOkK,aAAavK,EAAOM,KAAMN,EAAOwB,iBAE7CxB,EAAOS,aAAgBT,EAAOO,MAAS6J,EAEhC3M,GAAE0I,QACPmE,GAAWF,IACb3M,GAAE0I,MAAMC,MAAM3I,GAAEuF,WAAW2G,eAAgB3J,EAAOM,KAAMN,EAAOK,QAHjEyF,EAAK9F,EAAOM,KAAMkH,KAOfxH,EAAOS,aAAeT,EAAOO,MAAQ6J,GAAWE,IACnDL,KAIJ,QAASA,KACP5E,IACAmF,IAEIxK,EAAOM,MACTmK,EAAQzK,EAAOM,KAAM7C,GAAEqF,QAAQ2F,SAGjCnD,GAAMC,UAAW,EAEb9H,GAAEsI,iBAAkB,GACtB2E,IAGEjN,GAAE0I,QACDnG,EAAOa,gBACTpD,GAAE0I,MAAMC,MAAM3I,GAAEuF,WAAW2H,YAAa3K,EAAOM,KAAMN,EAAOa,eAAgBb,EAAOK,QAEpF5C,GAAE0I,MAAMC,MAAM3I,GAAEuF,WAAW4H,gBAAiB5K,EAAOM,OAGrDN,EAAOK,OAASL,EAAOM,KAAON,EAAOQ,WAAaR,EAAOwB,eAAiBxB,EAAOyB,eAAiBzB,EAAOS,YAAc,KACvHT,EAAO0B,aAAe1B,EAAO2B,aAAe3B,EAAOa,eAAiBb,EAAO4B,iBAAmB5B,EAAOY,YAAc,KACnHZ,EAAOgK,aAAehK,EAAOW,UAAYX,EAAOO,KAAOP,EAAOgB,MAAQhB,EAAOiB,MAAQ,KAIvF,QAASyI,GAAmBhJ,EAAQlD,GAClC,GAAIqN,GAAUrN,IAAMwC,EAAOI,OAASJ,EAAOyB,eAAiBuH,EAAOhJ,EAAOM,MAC1E,OAAOI,KAAWV,EAAOK,QAAUwK,IAAY7K,EAAOwB,eAIxD,QAASoE,GAAeH,EAAqBrE,EAASC,GAQpD,QAASyJ,KACP,GAAIC,IAAU,CAEd,IAAI1E,EAAY3F,GAAS,CAOvB,IALA,GAAIsK,GAAYC,EAAkBvK,EAAQ+E,GACxCyF,EAAYC,EAAazK,EAAQsK,EAAW5J,EAASC,GACrDiJ,EAAUZ,EAAmBhJ,EAAQwK,GACrCrN,EAAIJ,GAAE4F,UAAUjF,OAEXP,KAAK,CACV,GAA0D,KAAtDmC,EAAOG,WAAW1C,GAAE4F,UAAUxF,IAAI0I,QAAQ7F,GAAgB,CAC5DV,EAAOW,UAAYX,EAAOE,cAAczC,GAAE4F,UAAUxF,IAAImC,EAAOG,WAAW1C,GAAE4F,UAAUxF,IAAI0I,QAAQ7F,GAClG,OAEGV,EAAOW,YACVX,EAAOW,UAAYX,EAAOE,cAAckL,eAAepL,EAAOG,WAAWiL,eAAe7E,QAAQ7F,KAIpGqK,EAAUT,GACPtK,EAAOW,UAAUlD,EAAEsN,QAAQ/K,EAAOM,KAAMI,EAAQV,EAAOK,OAAQ6K,EAAWlL,EAAOS,YAAaT,EAAO0B,eACpGjE,GAAE4N,cAAcrL,EAAOM,KAAMI,EAAQV,EAAOK,OAAQ6K,EAAWlL,EAAOS,YAAaT,EAAO0B,cAE1F1B,EAAOU,SAAWA,IACpBV,EAAOU,OAASA,GAGpB,MAAOqK,GAjCT,IAFA,GAAIrK,GAAS+E,EAEN/E,IAAWoK,KAChBpK,EAAS6G,EAAU7G,EAErB,OAAOA,GAkCT,QAASkI,GAAKxL,GAwGZ,QAASkO,GAAMrG,GACTxH,GAAE0I,OACJ1I,GAAE0I,MAAMC,MAAM3I,GAAEuF,WAAW,WAAaiC,GAAOjF,EAAOM,KAAMN,EAAOa,eAAgBb,EAAOK,QAExF5C,GAAEsI,iBAAkB,IACb,SAATd,EAAkBsG,IAAcb,KAIpC,QAASc,KACHC,GACFH,EAAM,QAIV,QAASI,KACH1L,EAAOa,gBACTyK,EAAM,OAxHV,GAAKtL,EAAOI,OAAZ,CAGAhD,EAAIA,GAAKqH,OAAOC,MAGhB1E,EAAOoB,QAAUoE,EAAS,UAAWpI,GACrC4C,EAAOqB,QAAUmE,EAAS,UAAWpI,EAGrC,IAEEuO,GACAC,EACAC,EAJEC,EAAI9L,EAAOoB,QAAUpB,EAAOc,QAC9BiL,EAAI/L,EAAOqB,QAAUrB,EAAOe,OAM1BtD,IAAE0F,cACJwI,EAAQnG,EAAS,QAASpI,GAC1BwO,EAAQpG,EAAS,QAASpI,GAC1ByO,EAAY1D,GAAU1K,GAAE0F,cAGrB1F,GAAEuO,SACAvO,GAAE0F,aAAgBwI,EAAQE,EAAUzD,KAAOpI,EAAOc,SAAW6K,EAAQE,EAAUvD,MAAQtI,EAAOkB,SACjGlB,EAAOI,OAAOuI,MAAMP,KAAO0D,EAAI,KACtBrO,GAAE0F,cACPwI,EAAQE,EAAUzD,KAAOpI,EAAOc,QAClCd,EAAOI,OAAOuI,MAAMP,KAAOpI,EAAOoB,SAAWuK,EAAQE,EAAUzD,MAAQ,KAEvEpI,EAAOI,OAAOuI,MAAMP,KAAOpI,EAAOoB,QAAUpB,EAAOsB,aAAeqK,EAAQE,EAAUvD,OAAS,OAI9F7K,GAAEwO,SACAxO,GAAE0F,aAAgByI,EAAQC,EAAUxD,IAAMrI,EAAOe,SAAW6K,EAAQC,EAAUtD,OAASvI,EAAOmB,SACjGnB,EAAOI,OAAOuI,MAAMN,IAAM0D,EAAI,KACrBtO,GAAE0F,cACPyI,EAAQC,EAAUxD,IAAMrI,EAAOe,QACjCf,EAAOI,OAAOuI,MAAMN,IAAMrI,EAAOqB,SAAWuK,EAAQC,EAAUxD,KAAO,KAErErI,EAAOI,OAAOuI,MAAMN,IAAMrI,EAAOqB,QAAUrB,EAAOuB,cAAgBqK,EAAQC,EAAUtD,QAAU,MAKpG,IAAI9C,GAAsBC,GAAsB1F,EAAOI,OAAQJ,EAAOoB,QAASpB,EAAOqB,SACpFsE,EAAaC,EAAeH,EAAqBzF,EAAOoB,QAASpB,EAAOqB,SACxEoK,EAAU9F,IAAe3F,EAAOa,cAiBlC,IAfI4E,IAAwBzF,EAAO8B,0BACjCmE,EAAUR,EAAqBzF,EAAO6B,eAAeqK,gBAAiBvG,GAClE3F,EAAO8B,yBACTmE,EAAUjG,EAAO8B,wBAAyB9B,EAAO6B,eAAesK,cAAe1G,GAEjFzF,EAAO8B,wBAA0B2D,GAG/BgG,IACFC,IACA1L,EAAOa,eAAiB8E,EACxB6F,KAIE7F,IAAe3F,EAAOK,QAAUL,EAAOO,OAAS9C,GAAEoI,eAIpD,YAHI0B,EAAUvH,EAAOM,OACnBN,EAAOM,KAAKmH,WAAWqC,YAAY9J,EAAOM,MAK9C,IAAI4K,GACFF,EAAYC,EAAkBtF,EAAYF,EAE5C,IAAkB,OAAduF,EACFE,EAAYC,EAAaxF,EAAYqF,EAAWhL,EAAOoB,QAASpB,EAAOqB,aAClE,CAAA,GAAI5D,GAAE4M,iBAAkB,GAASrK,EAAOO,KAU7C,YAJIP,EAAOO,MAAQgH,EAAUvH,EAAOM,OAElCN,EAAOM,KAAKmH,WAAWqC,YAAY9J,EAAOM,MAN5C4K,GAAYlL,EAAOwB,eACnBmE,EAAa3F,EAAOK,QASJ,OAAd6K,GACFA,IAAclL,EAAOM,MACrB4K,IAAclC,EAAOhJ,EAAOM,OAC5B4K,IAAclL,EAAOyB,kBAErBzB,EAAOyB,eAAiByJ,EAExBvF,EAAW4E,aAAavK,EAAOM,KAAM4K,GAEjCzN,GAAE0I,OACJ1I,GAAE0I,MAAMC,MAAM3I,GAAEuF,WAAWoJ,eAAgBpM,EAAOM,KAAMqF,KA0B9D,QAAS4F,KACPd,EAAQzK,EAAOM,KAAM7C,GAAEqF,QAAQuJ,MAGjC,QAAS3B,KACHpF,GAAMC,UACRiD,EAASxI,EAAOM,KAAM7C,GAAEqF,QAAQuJ,MAIpC,QAASC,GAAgBlP,GACvB,GAAI4C,EAAOU,OAAQ,CACjB,GAAI6L,GAASvM,EAAOU,OAAO8L,SAC3BxM,GAAOU,OAAO8L,WAAapP,EAAEqP,OAEzBF,IAAWvM,EAAOU,OAAO8L,YAC3BpP,EAAEsP,kBACFtP,EAAEgI,mBAKR,QAASsD,KACP,IAAI1I,EAAOI,OAAX,CAGA,GAAIuM,GAAO3M,EAAOQ,WAAWoM,uBAC7B5M,GAAOI,OAASJ,EAAOQ,WAAW2I,WAAU,GAC5CnJ,EAAOsB,YAAcqL,EAAKE,MAC1B7M,EAAOuB,aAAeoL,EAAKG,OAC3B9M,EAAOI,OAAOuI,MAAMkE,MAAQE,EAAaJ,GAAQ,KACjD3M,EAAOI,OAAOuI,MAAMmE,OAASE,EAAcL,GAAQ,KACnDlC,EAAQzK,EAAOI,OAAQ3C,GAAEqF,QAAQ2F,SACjCD,EAASxI,EAAOI,OAAQ3C,GAAEqF,QAAQ1C,QAClC3C,GAAEwP,gBAAgBC,YAAYlN,EAAOI,QACrCyD,EAASC,GAAQ,KAAM,YAAa8E,GACpCJ,EAAS2E,GAAM1P,GAAEqF,QAAQsK,cACzBvJ,EAAS7D,EAAOI,OAAQ,KAAM,QAASkM,GACnC7O,GAAE0I,OACJ1I,GAAE0I,MAAMC,MAAM3I,GAAEuF,WAAWoG,eAAgBpJ,EAAOI,OAAQJ,EAAOQ,aAIrE,QAASgK,KACHxK,EAAOI,SACTqK,EAAQ0C,GAAM1P,GAAEqF,QAAQsK,cACxBvJ,EAASC,GAAQ,MAAO,YAAa8E,GACrC/E,EAAS7D,EAAOI,OAAQ,MAAO,QAASkM,GACrC/E,EAAUvH,EAAOI,SAClBJ,EAAOI,OAAOqH,WAAWqC,YAAY9J,EAAOI,QAE9CJ,EAAOI,OAAS,MAIpB,QAAS6K,GAAkBtF,EAAYjF,GAErC,IADA,GAAIsK,GAAYtK,EACTsK,IAAcrF,GAAc4B,EAAUyD,KAAerF,GAC1DqF,EAAYzD,EAAUyD,EAExB,OAAIA,KAAclH,GACT,KAEFkH,EAGT,QAASG,GAAaxF,EAAYjF,EAAQoL,EAAGC,GAI3C,QAASsB,KACP,GACExP,GAAGyI,EAAIqG,EADLpJ,EAAMoC,EAAW2H,SAASlP,MAE9B,KAAKP,EAAI,EAAO0F,EAAJ1F,EAASA,IAAK,CAGxB,GAFAyI,EAAKX,EAAW2H,SAASzP,GACzB8O,EAAOrG,EAAGsG,wBACNW,GAAcZ,EAAKvE,KAAO0D,EAC5B,MAAOxF,EAET,KAAKiH,GAAcZ,EAAKtE,IAAM0D,EAC5B,MAAOzF,GAGX,MAAO,MAGT,QAASkH,KACP,GAAIb,GAAOjM,EAAOkM,uBAClB,OACSa,GADLF,EACazB,EAAIa,EAAKvE,KAAO2E,EAAaJ,GAAQ,EAEvCZ,EAAIY,EAAKtE,IAAM2E,EAAcL,GAAQ,GAGtD,QAASc,GAAQC,GACf,MAAOA,GAAQ1E,EAAOtI,GAAUA,EA5BlC,GAAI6M,GAA6B,eAAhB9P,GAAE6J,SACnB,OAAO5G,KAAWiF,EAAa6H,IAAWH,IA+B5C,QAASnE,IAAO5I,EAAM0D,GACpB,MAAyB,iBAAXvG,IAAE8C,KAAqB9C,GAAE8C,KAAO9C,GAAE8C,KAAKD,EAAM0D,GAG7D,QAAS2J,IAAUC,EAAYC,GAC7B,MAAkC,mBAAvBpJ,QAAOoJ,GACTpJ,OAAOoJ,GAEZ/J,GAAOiE,aACFjE,GAAO8J,GAETT,GAAKS,GAGd,QAASzF,IAAU7B,GACjB,GAAIqG,GAAOrG,EAAGsG,wBACZJ,EAAYmB,GAAU,YAAa,eACnCG,EAAaH,GAAU,aAAc,cACvC,QACEvF,KAAMuE,EAAKvE,KAAO0F,EAClBxF,MAAOqE,EAAKrE,MAAQwF,EACpBzF,IAAKsE,EAAKtE,IAAMmE,EAChBjE,OAAQoE,EAAKpE,OAASiE,GAI1B,QAAS9G,IAAsBqI,EAAOjC,EAAGC,GACvC,GAEEzF,GAFE0H,EAAID,MACNE,EAAQD,EAAEE,SAKZ,OAHAF,GAAEE,WAAa,IAAMzQ,GAAEqF,QAAQuJ,KAC/B/F,EAAKlC,GAAI+C,iBAAiB2E,EAAGC,GAC7BiC,EAAEE,UAAYD,EACP3H,EAr3BT,GAAI5D,IAAoBP,MACtBhD,GAAUiD,MAEVgC,GAAMzB,SACNwK,GAAO/I,GAAI+I,KACXrJ,GAASM,GAAI+J,gBAEbpL,IACE3C,OAAQ,YACRiM,KAAM,UACNe,aAAc,kBACd3E,QAAS,cAEXxF,IAEEiJ,cAAe,gBACfC,cAAe,gBACfjG,gBAAiB,kBAEjBkD,eAAgB,iBAChBG,aAAc,eACdI,eAAgB,iBAChBC,aAAc,eACdM,eAAgB,iBAChBU,gBAAiB,kBACjBwB,eAAgB,iBAChBgC,aAAc,eACdzD,YAAa,eAEflN,IAEEqF,QAASC,GAETC,WAAYC,GAEZ9C,YAAY,EAEZ4I,MAAOsF,EAEPtD,QAASsD,EAEThD,cAAegD,EAEfhI,YAAaiI,EAEb/N,MAAM,EAENuI,QAASU,EAETa,eAAe,EAEftE,eAAe,EAEfkG,OAAO,EAEPD,OAAO,EAEP7I,aAAa,EAEb1D,iBAAiB,EAEjBmC,iBAAkB2M,EAElBtB,gBAAiB7I,GAAI+I,KAErBjG,0BAA0B,EAG9B7E,KACAQ,IACAK,IACAQ,GAEA,IAAI4B,KACFnF,WAAYH,EAAOG,WACnBD,cAAeF,EAAOE,cACtBmG,YAAaA,EACbgB,MAAO4B,EACP7B,IAAKA,EACLpB,OAAQA,EACRrC,OAAQA,EACRsD,QAASA,EACT1B,UAAU,EAGZ,OAAOD,IA0yBT,QAASzB,GAASyC,EAAI1C,EAAIqB,EAAMuJ,GAC9B,GAAIC,IACAC,QAAS,WACTC,UAAW,aACXC,UAAW,aAEbC,EAAMtP,QAAQuP,QAAQxI,EAEpBmI,GAAMxJ,IACR4J,EAAIjL,GAAI6K,EAAMxJ,GAAOuJ,GAEvBK,EAAIjL,GAAIqB,EAAMuJ,GAGhB,QAASF,KACP,OAAO,EAGT,QAASD,KACP,OAAO,EAIT,QAASjL,GAAUqD,EAAKsI,GACtB,MAAIxM,OAAMC,QAAQiE,GACTA,EAELA,EAAIrI,OACCmE,MAAMyM,UAAUC,MAAM9Q,KAAKsI,EAAKsI,IAE/BtI,GAIZ,QAAS9B,GAAkBvH,GACzB,GAAkB,SAAdA,EAAE8R,QAAsB,MAAO9R,GAAE8R,QAAQ9Q,MAC7C,IAAkB+Q,SAAd/R,EAAEgS,QAAyB,MAAOhS,GAAEgS,OACxC,IAAgBD,SAAZ/R,EAAEiS,MAAuB,MAAOjS,GAAEiS,KACtC,IAAIC,GAASlS,EAAEkS,MACf,OAAeH,UAAXG,EACc,EAATA,EAAa,EAAa,EAATA,EAAa,EAAc,EAATA,EAAa,EAAI,EAD7D,OAKF,QAASvC,GAAaJ,GACpB,MAAOA,GAAKE,OAAUF,EAAKrE,MAAQqE,EAAKvE,KAG1C,QAAS4E,GAAcL,GACrB,MAAOA,GAAKG,QAAWH,EAAKpE,OAASoE,EAAKtE,IAG5C,QAASkG,KACP,SAGF,QAASvF,GAAO1C,GAGd,QAASiJ,KACP,GAAI1E,GAAUvE,CACd,GACEuE,GAAUA,EAAQ2E,kBACX3E,GAAgC,IAArBA,EAAQ4E,SAC5B,OAAO5E,GAPT,MAAOvE,GAAGoJ,oBAAsBH,IAYlC,QAAS9M,GAAUhF,GACjB,MACyB,gBAAhBkS,aAA2BlS,YAAakS,aAC/ClS,GAAkB,gBAANA,IAAwB,OAANA,GAA6B,IAAfA,EAAEgS,UAAwC,gBAAfhS,GAAEmS,SAI7E,QAASC,GAAY3B,GACnB,GAAI4B,GAAS9P,EAAOC,aAAaiO,EAMjC,OALI4B,GACFA,EAAOC,UAAY,EAEnB/P,EAAOC,aAAaiO,GAAa4B,EAAS,GAAIE,QAAO,YAAc9B,EAAY,YAAa,KAEvF4B,EAGT,QAAStH,GAASlC,EAAI4H,GACpB,GAAI+B,GAAU3J,EAAG4H,SACZ+B,GAAQ7R,OAEDyR,EAAY3B,GAAWgC,KAAKD,KACtC3J,EAAG4H,WAAa,IAAMA,GAFtB5H,EAAG4H,UAAYA,EAMnB,QAASzD,GAAQnE,EAAI4H,GACnB5H,EAAG4H,UAAY5H,EAAG4H,UAAUiC,QAAQN,EAAY3B,GAAY,KAAKkC,OAGnE,QAASC,GAAajT,GAIpB,MAAIA,GAAEkT,eAAiBlT,EAAEkT,cAAclS,OAC9BhB,EAAEkT,cAAc,GAErBlT,EAAEmT,gBAAkBnT,EAAEmT,eAAenS,OAChChB,EAAEmT,eAAe,GAEnBnT,EAGT,QAASoI,GAASgL,EAAOpT,GACvB,GAAIqT,GAAOJ,EAAajT,GACpBsT,GACF/E,MAAO,UACPC,MAAO,UAOT,OALI4E,KAASE,MAAaF,IAASC,KAASC,EAAQF,IAAUC,KAC5DD,EAAQE,EAAQF,KAIbC,EAAKxL,MAAQwL,EAAKxL,KAAKsB,QAAQ,SAAW,EACtCkK,EAAKD,GAEqB,KAA7BC,EAAKxL,KAAKsB,QAAQ,OAEbkK,EAAKE,cAAczB,QAAQ,GAAGsB,EAAML,QAAQ,SAAU,UAGxD,EAIX,QAAS5I,GAAWjB,GAClB,MAAOA,GAAGmB,aAAe9E,SAAW,KAAO2D,EAAGmB,WAGhD,QAASvC,GAASoB,GAChB,MAAsB,UAAfA,EAAGsK,SAAsC,aAAftK,EAAGsK,SAAyC,WAAftK,EAAGsK,SAAwBC,EAAWvK,GAGtG,QAASuK,GAAYvK,GACnB,MAAKA,GACsB,UAAvBA,EAAGwK,iBAAsC,EAClB,SAAvBxK,EAAGwK,iBAAqC,EACrCD,EAAWtJ,EAAUjB,KAHV,EAMpB,QAASgD,GAAWyH,EAAOvJ,GACzB,MAAOjF,OAAMyM,UAAUzI,QAAQpI,KAAKoB,QAAQuP,QAAQtH,GAAQ8F,WAAYyD,GAG1E,QAAS9K,GAAUvF,EAAQtD,EAAG4T,GACvBtQ,IAGLV,EAAOgR,MAAQA,EACXtQ,EAAOuQ,cACTvQ,EAAOuQ,cAAc7T,GAErBsD,EAAOuF,UAAU,KAAO7I,EAAEoH,UAAWpH,IAriCzC,MATA8E,GAAQgP,gBAAkB,WACxBlR,EAAOC,gBACPD,EAAOE,iBACPF,EAAOG,cACPH,EAAOI,OAAS+O,QAGlBjN,EAAQlC,OAASA,EAEVkC,OA2iCNxC,mBAAmB,SAAS","file":"dragular.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* global angular */\n'use strict';\n\n/**\n * dragular Directive by Luckylooke https://github.com/luckylooke/dragular\n * Angular version of dragula https://github.com/bevacqua/dragula\n */\n var dragularModule = require('./dragularModule');\n\ndragularModule.directive('dragular', [\"dragularService\", function(dragularService) {\n  return {\n    restrict: 'A',\n    link: function($scope, iElm, iAttrs) {\n\n      var options = $scope.$eval(iAttrs.dragular) || tryJson(iAttrs.dragular) || {};\n\n      function tryJson(json) {\n        try { // I dont like try catch solutions but I havent find sattisfying way of chcecking json validity.\n          return JSON.parse(json);\n        } catch (e) {\n          return undefined;\n        }\n      }\n\n      if(iAttrs.dragularModel){\n        options = angular.extend({containersModel: $scope.$eval(iAttrs.dragularModel)}, options);\n      }else if(options && options.containersModel && typeof options.containersModel === 'string'){\n        options.containersModel = $scope.$eval(options.containersModel);\n      }\n\n      dragularService(iElm[0], options);\n    }\n  };\n}]);\n\n},{\"./dragularModule\":2}],2:[function(require,module,exports){\n/* global angular */\n'use strict';\n\n\n\n/**\n * Dragular 3.3.1 by Luckylooke https://github.com/luckylooke/dragular\n * Angular version of dragula https://github.com/bevacqua/dragula\n */\nmodule.exports = angular.module('dragularModule', []);\n\n({\"dragularDirective\":require(\"./dragularDirective.js\"),\"dragularService\":require(\"./dragularService.js\")});\n\n},{\"./dragularDirective.js\":1,\"./dragularService.js\":3}],3:[function(require,module,exports){\n/* global angular */\n'use strict';\n\n/**\n * dragular Service by Luckylooke https://github.com/luckylooke/dragular\n * Angular version of dragula https://github.com/bevacqua/dragula\n */\n\nvar dragularModule = require('./dragularModule'),\n  shared = { // sahred object between all service instances\n      classesCache: {}, // classes lookup cache\n      containersCtx: {}, // containers model\n      containers: {}, // containers\n      mirror: null, // mirror image\n      source: null, // source container\n      item: null, // item being dragged\n      copy: null, // isCopy flag\n      sourceItem: null, // item originaly dragged if copy is enabled\n      sourceModel: null, // source container model\n      target: null, // droppable container under drag item\n      targetCtx: null, // target container context\n      targetModel: null, // target container model\n      lastDropTarget: null, // last container item was over\n      offsetX: null, // reference x\n      offsetY: null, // reference y\n      moveX: null, // reference move x\n      moveY: null, // reference move y\n      offsetXr: null, // reference x right for boundingBox feature\n      offsetYb: null, // reference y bottom for boundingBox feature\n      clientX: null, // cache client x, init at grab, update at drag\n      clientY: null, // cache client y, init at grab, update at drag\n      mirrorWidth: null, // mirror width for boundingBox feature\n      mirrorHeight: null, // mirror height for boundingBox feature\n      initialSibling: null, // reference sibling when grabbed\n      currentSibling: null, // reference sibling now\n      initialIndex: null, // reference model index when grabbed\n      currentIndex: null, // reference model index now\n      isContainerModel: null, // if o.isContainer is used, model can be provided as well, here it is kept\n      dragOverEvents: {}, // drag over events fired on element behind cursor\n      lastElementBehindCursor: null, // last element behind cursor\n      grabbed: null // holds mousedown context until first mousemove\n    };\n\ndragularModule.factory('dragularService', [\"$rootScope\", function dragularServiceFunction($rootScope) {\n  // clean common/shared objects\n  service.cleanEnviroment = function cleanEnviroment() {\n    shared.classesCache = {};\n    shared.containersCtx = {};\n    shared.containers = {};\n    shared.mirror = undefined;\n  };\n\n  service.shared = shared;\n\n  return service;\n    \n  // service definition\n  function service(arg0, arg1) {\n    var initialContainers = arg0 || [],\n      options = arg1 || {},\n      // abbreviations\n      doc = document,\n      body = doc.body,\n      docElm = doc.documentElement,\n      // defaults\n      defaultClasses = {\n        mirror: 'gu-mirror',\n        hide: 'gu-hide',\n        unselectable: 'gu-unselectable',\n        transit: 'gu-transit'\n      },\n      defaultEventNames = {\n        // drag-over DOM events\n        dragularenter: 'dragularenter',\n        dragularleave: 'dragularleave',\n        dragularrelease: 'dragularrelease',\n        // $scope events\n        dragularcloned: 'dragularcloned',\n        dragulardrag: 'dragulardrag',\n        dragularcancel: 'dragularcancel',\n        dragulardrop: 'dragulardrop',\n        dragularremove: 'dragularremove',\n        dragulardragend: 'dragulardragend',\n        dragularshadow: 'dragularshadow',\n        dragularover: 'dragularover',\n        dragularout: 'dragularout'\n      },\n      o = { // options with defaults\n        // classes used by dragular\n        classes: defaultClasses,\n        // event names used by dragular\n        eventNames: defaultEventNames,\n        // initial containers provided via options object (are provided via parameter by default)\n        containers: false,\n        // can drag start?\n        moves: always,\n        // can target accept dragged item? (target context used)\n        accepts: always,\n        // can be dragged item accepted by target? (source context used)\n        canBeAccepted: always,\n        // potential target can be forced to be container by custom logic\n        isContainer: never,\n        // dragged item will be copy of source? flag or function\n        copy: false,\n        // target (in)validity function\n        invalid: invalidTarget,\n        // item returns to original place\n        revertOnSpill: false,\n        // item will be removed if not placed into valid target\n        removeOnSpill: false,\n        // lock movement into x-axis\n        lockX: false,\n        // lock movement into y-axis\n        lockY: false,\n        // lock movement inside this element boundaries\n        boundingBox: false,\n        // if provided, model will be synced with DOM\n        containersModel: false,\n        // if isContainer function is provided, you can provide also respective model\n        isContainerModel: getEmptyObject,\n        // element for appending mirror\n        mirrorContainer: doc.body,\n        // text selection in inputs wont be considered as drag\n        ignoreInputTextSelection: false\n      };\n\n    processServiceArguments(); // both arguments (containers and options) are optional, this function handle this\n    extendDefaultOptions();\n    processOptionsObject();\n    registerEvents();\n\n    var drake = {\n      containers: shared.containers,\n      containersCtx: shared.containersCtx,\n      isContainer: isContainer,\n      start: manualStart,\n      end: end,\n      cancel: cancel,\n      remove: remove,\n      destroy: destroy,\n      dragging: false\n    };\n\n    return drake;\n\n    // Function definitions: ==============================================================================================================\n    // Initial functions: -----------------------------------------------------------------------------------------------------------------\n\n    function processServiceArguments(){\n      if (arguments.length === 1 && // if there is only one argument we need to distinguish if it is options object or container(s) reference\n          !Array.isArray(arg0) && // array of containers elements\n          !angular.isElement(arg0) && // one container element\n          !arg0[0] && // array-like object with containers elements\n          typeof arg0 !== 'string') { // selector\n        // then arg0 is options object\n        options = arg0 || {};\n        initialContainers = []; // containers are not provided on init\n      } else if (typeof arg0 === 'string') {\n        initialContainers = document.querySelectorAll(arg0);\n      }\n    }\n\n    function extendDefaultOptions(){\n      angular.extend(o, options);\n      if(options.classes){\n        o.classes = angular.extend({}, defaultClasses, options.classes);\n      }\n      if(options.eventNames){\n        o.eventNames = angular.extend({}, defaultEventNames, options.eventNames);\n      }\n    }\n\n    function processOptionsObject(){\n      // bounding box must be pure DOM element, not jQuery wrapper or something else..\n      if (!isElement(o.boundingBox)) {\n        o.boundingBox = false;\n      }\n\n      // initial containers provided via options are higher priority then by parameter\n      if(o.containers){\n        initialContainers = o.containers;\n      }\n      // sanitize initialContainers\n      initialContainers = makeArray(initialContainers);\n\n      // sanitize o.containersModel\n      if (Array.isArray(o.containersModel)) {\n        //                  |-------- is 2D array? -----------|\n        o.containersModel = Array.isArray(o.containersModel[0]) ? o.containersModel : [o.containersModel];\n      } else {\n        o.containersModel = [];\n      }\n\n      // feed containers groups and optionaly do same for models\n      if (!o.nameSpace) {\n        o.nameSpace = ['dragularCommon'];\n      }\n      if (!Array.isArray(o.nameSpace)) {\n        o.nameSpace = [o.nameSpace];\n      }\n      o.nameSpace.forEach(function eachNameSpace(nameSpace) {\n        if (!shared.containers[nameSpace]) {\n          shared.containers[nameSpace] = [];\n          shared.containersCtx[nameSpace] = [];\n        }\n        var len = initialContainers.length,\n          shLen = shared.containers[nameSpace].length;\n        for (var i = 0; i < len; i++) {\n          shared.containers[nameSpace][i + shLen] = initialContainers[i];\n          shared.containersCtx[nameSpace][i + shLen] = {\n            o: o,\n            m: o.containersModel[i] // can be undefined\n          };\n        }\n      });\n    }\n\n    function registerEvents(remove) {\n      var op = remove ? 'off' : 'on';\n      regEvent(docElm, op, 'mouseup', release);\n      // regEvent(docElm, op, 'mousemove', startBecauseMouseMoved);\n\n      initialContainers.forEach(function addMouseDown(container) {\n        regEvent(container, 'on', 'mousedown', grab);\n      });\n\n      if(!remove){ // create dragular DOM events\n        angular.forEach(['dragularenter', 'dragularleave', 'dragularrelease'], function prepareDragOverEvents(name) {\n          var eventName = o.eventNames[name];\n          if(!shared.dragOverEvents[eventName]){\n            if (doc.createEvent) {\n              shared.dragOverEvents[eventName] = doc.createEvent('HTMLEvents');\n              shared.dragOverEvents[eventName].initEvent(eventName, true, true);\n            } else {\n              shared.dragOverEvents[eventName] = doc.createEventObject();\n              shared.dragOverEvents[eventName].eventType = eventName;\n            }\n          }\n        });\n      }\n    }\n    \n    // Event handlers functions (end of initial functions): -----------------------------------------------------------------------------------------------------------------\n\n    function grab(e) {\n      e = e || window.event;\n      shared.moveX = e.clientX;\n      shared.moveY = e.clientY;\n\n      // filter some odd situations\n      if (whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey) {\n        return; // we only care about honest-to-god left clicks and touch events\n      }\n\n      var context = canStart(e.target);\n      if (!context || !context.item) {\n        return;\n      }\n\n      shared.grabbed = context;\n      eventualMovements();\n      if (e.type === 'mousedown') {\n        if (isInput(context.item)) { // see also: https://github.com/bevacqua/dragula/issues/208\n          context.item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\n        } else {\n          e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\n        }\n      }\n    }\n\n    function release(e) {\n      ungrab();\n      if (!drake.dragging) {\n        return;\n      }\n      e = e || window.event;\n\n      shared.clientX = getCoord('clientX', e);\n      shared.clientY = getCoord('clientY', e);\n\n      var elementBehindCursor = getElementBehindPoint(shared.mirror, shared.clientX, shared.clientY),\n        dropTarget = findDropTarget(elementBehindCursor, shared.clientX, shared.clientY);\n\n      if (dropTarget && ((shared.copy && o.copySortSource) || (!shared.copy || dropTarget !== shared.source))) {\n        // found valid target and (is not copy case or target is not initial container)\n        drop(shared.item, dropTarget);\n      } else if (o.removeOnSpill) {\n        remove();\n      } else {\n        cancel();\n      }\n\n      // after release there is no container hovered\n      shared.target = null;\n\n      if (shared.lastElementBehindCursor) {\n        fireEvent(shared.lastElementBehindCursor, shared.dragOverEvents.dragularrelease, elementBehindCursor);\n      }\n\n      if (o.scope) {\n        o.scope.$emit(o.eventNames.dragularrelease, shared.item, shared.source);\n      }\n    }\n    \n    // Main logic functions (end of event handler functions): -----------------------------------------------------------------------------------------------------------------\n\n    function isContainer(el) {\n      if(!el){\n        return false;\n      }\n      var i = o.nameSpace.length;\n      while (i--) {\n        if (shared.containers[o.nameSpace[i]].indexOf(el) !== -1) {\n          return true;\n        }\n      }\n      if (o.isContainer(el)) {\n        shared.isContainerModel = o.isContainerModel(el);\n        return true;\n      } else {\n        shared.isContainerModel = null;\n      }\n      return false;\n    }\n    \n    // Helper functions (end of main logic functions): -----------------------------------------------------------------------------------------------------------------\n\n    // add or remove containers - deprecated\n    function removeContainers(all) {\n      $rootScope.$applyAsync(function applyDestroyed() {\n        var changes = Array.isArray(all) ? all : makeArray(all);\n        changes.forEach(function forEachContainer(container) {\n          angular.forEach(o.nameSpace, function forEachNs(nameSpace) {\n            var index;\n            index = shared.containers[nameSpace].indexOf(container);\n            shared.containers[nameSpace].splice(index, 1);\n            shared.containersCtx[nameSpace].splice(index, 1);\n          });\n        });\n      });\n    }\n\n    function eventualMovements(remove) {\n      var op = remove ? 'off' : 'on';\n      regEvent(docElm, op, 'mousemove', startBecauseMouseMoved);\n    }\n\n    function movements(remove) {\n      var op = remove ? 'off' : 'on';\n      regEvent(docElm, op, 'selectstart', preventGrabbed); // IE8\n      regEvent(docElm, op, 'click', preventGrabbed);\n      regEvent(docElm, op, 'touchmove', preventGrabbed); // fixes touch devices scrolling while drag\n    }\n\n    function destroy() {\n      registerEvents(true);\n      removeContainers(initialContainers);\n      release({});\n    }\n\n    function preventGrabbed(e) {\n      if (shared.grabbed) {\n        e.preventDefault();\n      }\n    }\n\n    function startBecauseMouseMoved(e) {\n      if (!shared.grabbed || drake.dragging) {\n        return;\n      }\n      if (whichMouseButton(e) === 0) {\n        release({});\n        return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\n      }\n      // truthy check fixes #239, equality fixes #207\n      if (e.clientX && e.clientX === shared.moveX && e.clientY && e.clientY === shared.moveY) {\n        return;\n      }\n      if (o.ignoreInputTextSelection) {\n        var clientX = getCoord('clientX', e),\n          clientY = getCoord('clientY', e),\n          elementBehindCursor = doc.elementFromPoint(clientX, clientY);\n        if (isInput(elementBehindCursor)) {\n          return;\n        }\n      }\n\n      var grabbed = shared.grabbed; // call to end() unsets shared.grabbed\n      eventualMovements(true); // remove mousemove listener\n      movements();\n      end();\n      start(grabbed);\n\n      // automaticly detect direction of elements if not set in options\n      if (!o.direction && getParent(shared.sourceItem)) {\n        var parent = shared.sourceItem.parentNode,\n          parentHeight = parent.offsetHeight,\n          parentWidth = parent.offsetWidth,\n          childHeight = shared.sourceItem.clientHeight,\n          childWidth = shared.sourceItem.clientWidth;\n        o.direction = parentHeight / childHeight < parentWidth / childWidth ? 'horizontal' : 'vertical';\n      }\n\n      // get initial coordinates, used to render shared.mirror for first time\n      var offset = getOffset(shared.sourceItem);\n      shared.offsetX = getCoord('pageX', e) - offset.left;\n      shared.offsetY = getCoord('pageY', e) - offset.top;\n      shared.clientX = getCoord('clientX', e);\n      shared.clientY = getCoord('clientY', e);\n\n      // limiting area of shared.mirror movement, get initial coordinates\n      if (o.boundingBox) {\n        shared.offsetXr = getCoord('pageX', e) - offset.right;\n        shared.offsetYb = getCoord('pageY', e) - offset.bottom;\n      }\n\n      e.preventDefault();\n\n      addClass(shared.item, o.classes.transit);\n      renderMirrorImage();\n      // initial position\n      shared.mirror.style.left = shared.clientX - shared.offsetX + 'px';\n      shared.mirror.style.top = shared.clientY - shared.offsetY + 'px';\n\n      drag(e);\n    }\n\n\n    function canStart(item) {\n      if (drake.dragging && shared.mirror) {\n        return; // already dragging\n      }\n\n      var handle = item;\n\n      while (getParent(item) && !isContainer(getParent(item))) {\n        // break loop if user tries to drag item which is considered invalid handle\n        if (o.invalid(item, handle)) {\n          return;\n        }\n        item = getParent(item); // drag target should be immediate child of container\n        if (!item) {\n          return;\n        }\n      }\n\n      var source = getParent(item);\n      if (!source ||\n        o.invalid(item, handle) ||\n        !o.moves(item, source, handle, nextEl(item))) {\n        return;\n      }\n\n      return {\n        item: item,\n        source: source\n      };\n    }\n\n    function manualStart(item) {\n      var context = canStart(item);\n      if (context) {\n        start(context);\n      }\n    }\n\n    function start(context) {\n      shared.sourceItem = shared.item = context.item;\n      shared.source = context.source;\n      shared.initialSibling = shared.currentSibling = nextEl(context.item);\n\n      if (isCopy(context.item, context.source)) {\n        shared.item = context.item.cloneNode(true);\n        shared.copy = true;\n        if (o.scope) {\n          o.scope.$emit(o.eventNames.dragularcloned, shared.item, context.item);\n        }\n      } else {\n        shared.copy = false;\n      }\n\n      // prepare models operations\n      var containerIndex = initialContainers.indexOf(context.source);\n      shared.sourceModel = o.containersModel[containerIndex];\n      shared.initialIndex = domIndexOf(context.item, context.source);\n\n      drake.dragging = true;\n      if (o.scope) {\n        o.scope.$emit(o.eventNames.dragulardrag, shared.sourceItem, shared.source);\n      }\n\n      return true;\n    }\n\n    function invalidTarget() {\n      return false;\n    }\n\n    function end() {\n      if (!drake.dragging || !shared.item) {\n        return;\n      }\n      drop(shared.item, getParent(shared.item));\n    }\n\n    function ungrab() {\n      shared.grabbed = false;\n      eventualMovements('remove');\n      movements('remove');\n    }\n\n    function drop(item, target) {\n      if (shared.copy && o.copySortSource && target === shared.source && getParent(item)) {\n        item.parentNode.removeChild(shared.sourceItem);\n      }\n\n      var dropIndex = domIndexOf(item, target);\n\n      if (shared.sourceModel && !isInitialPlacement(target)) {\n        var dropElm = item;\n        $rootScope.$applyAsync(function applyDrop() {\n          if (target === shared.source) {\n            shared.sourceModel.splice(dropIndex, 0, shared.sourceModel.splice(shared.initialIndex, 1)[0]);\n          } else {\n            shared.dropElmModel = shared.copy ? angular.copy(shared.sourceModel[shared.initialIndex]) : shared.sourceModel[shared.initialIndex];\n\n            if (!shared.isContainerModel) {\n              shared.targetModel = shared.targetCtx.m;\n            } else {\n              shared.targetModel = shared.isContainerModel;\n            }\n\n            target.removeChild(dropElm); // element must be removed for ngRepeat to apply correctly\n\n            if (!shared.copy) {\n              shared.sourceModel.splice(shared.initialIndex, 1);\n            }\n            shared.targetModel.splice(dropIndex, 0, shared.dropElmModel);\n          }\n\n          if (getParent(item)) {\n            item.parentNode.removeChild(item);\n          }\n\n          emitDropEvent();\n          cleanup();\n        });\n      } else {\n        emitDropEvent();\n        cleanup();\n      }\n\n      function emitDropEvent() {\n        if (o.scope) {\n          if (isInitialPlacement(target)) {\n            o.scope.$emit(o.eventNames.dragularcancel, item, shared.source, shared.sourceModel, shared.initialIndex);\n          } else {\n            o.scope.$emit(o.eventNames.dragulardrop, item, target, shared.source, shared.sourceModel, shared.initialIndex, shared.targetModel, dropIndex);\n          }\n        }\n      }\n    }\n\n    function remove() {\n      if (!drake.dragging) {\n        return;\n      }\n      var parent = getParent(shared.item);\n\n      if (parent) {\n        parent.removeChild(shared.item);\n      }\n\n      if (shared.sourceModel) {\n        $rootScope.$applyAsync(function removeModel() {\n          shared.sourceModel.splice(shared.initialIndex, 1);\n          cleanup();\n        });\n      }\n\n      if (o.scope) {\n        o.scope.$emit(shared.copy ? o.eventNames.dragularcancel : o.eventNames.dragularremove, shared.item, parent, shared.sourceModel, shared.initialIndex);\n      }\n      if (!shared.sourceModel) {\n        cleanup();\n      }\n    }\n\n    function cancel(revert) {\n      if (!drake.dragging) {\n        return;\n      }\n      var reverts = arguments.length > 0 ? revert : o.revertOnSpill,\n        parent = getParent(shared.item);\n\n      var initial = isInitialPlacement(parent);\n      if (!initial && !shared.copy && reverts) {\n        shared.source.insertBefore(shared.item, shared.initialSibling);\n      }\n      if (shared.sourceModel && !shared.copy && !reverts) {\n        drop(shared.item, parent);\n      } else if (o.scope) {\n        if (initial || reverts) {\n          o.scope.$emit(o.eventNames.dragularcancel, shared.item, shared.source);\n        }\n      }\n\n      if (!shared.sourceModel || shared.copy || reverts || initial) {\n        cleanup();\n      }\n    }\n\n    function cleanup() {\n      ungrab();\n      removeMirrorImage();\n\n      if (shared.item) {\n        rmClass(shared.item, o.classes.transit);\n      }\n\n      drake.dragging = false;\n\n      if (o.removeOnSpill === true) {\n        spillOut();\n      }\n\n      if (o.scope) {\n        if(shared.lastDropTarget){\n         o.scope.$emit(o.eventNames.dragularout, shared.item, shared.lastDropTarget, shared.source);\n        }\n        o.scope.$emit(o.eventNames.dragulardragend, shared.item);\n      }\n\n      shared.source = shared.item = shared.sourceItem = shared.initialSibling = shared.currentSibling = shared.sourceModel = null;\n      shared.initialIndex = shared.currentIndex = shared.lastDropTarget = shared.isContainerModel = shared.targetModel = null;\n      shared.dropElmModel = shared.targetCtx = shared.copy = shared.moveX = shared.moveY = null;\n    }\n\n    // is item currently placed in original container and original position?\n    function isInitialPlacement(target, s) {\n      var sibling = s || (shared.mirror ? shared.currentSibling : nextEl(shared.item));\n      return target === shared.source && sibling === shared.initialSibling;\n    }\n\n    // find valid drop container\n    function findDropTarget(elementBehindCursor, clientX, clientY) {\n      var target = elementBehindCursor;\n\n      while (target && !accepted()) {\n        target = getParent(target);\n      }\n      return target;\n\n      function accepted() {\n        var accepts = false;\n\n        if (isContainer(target)) { // is droppable?\n\n          var immediate = getImmediateChild(target, elementBehindCursor),\n            reference = getReference(target, immediate, clientX, clientY),\n            initial = isInitialPlacement(target, reference),\n            i = o.nameSpace.length;\n\n          while (i--) {\n            if (shared.containers[o.nameSpace[i]].indexOf(target) !== -1) {\n              shared.targetCtx = shared.containersCtx[o.nameSpace[i]][shared.containers[o.nameSpace[i]].indexOf(target)];\n              break;\n            }\n            if (!shared.targetCtx) {\n              shared.targetCtx = shared.containersCtx.dragularCommon[shared.containers.dragularCommon.indexOf(target)];\n            }\n          }\n\n          accepts = initial ||\n            (shared.targetCtx.o.accepts(shared.item, target, shared.source, reference, shared.sourceModel, shared.initialIndex) &&\n              o.canBeAccepted(shared.item, target, shared.source, reference, shared.sourceModel, shared.initialIndex));\n\n          if (shared.target !== target) { // used for scroll issue\n            shared.target = target;\n          }\n        }\n        return accepts;\n      }\n    }\n\n    function drag(e) {\n      if (!shared.mirror) {\n        return;\n      }\n      e = e || window.event;\n\n      // update coordinates\n      shared.clientX = getCoord('clientX', e);\n      shared.clientY = getCoord('clientY', e);\n\n      // count mirror coordiates\n      var x = shared.clientX - shared.offsetX,\n        y = shared.clientY - shared.offsetY,\n        pageX,\n        pageY,\n        offsetBox;\n\n      // fill extra properties if boundingBox is used\n      if (o.boundingBox) {\n        pageX = getCoord('pageX', e);\n        pageY = getCoord('pageY', e);\n        offsetBox = getOffset(o.boundingBox);\n      }\n\n      if (!o.lockY) {\n        if (!o.boundingBox || (pageX > offsetBox.left + shared.offsetX && pageX < offsetBox.right + shared.offsetXr)) {\n          shared.mirror.style.left = x + 'px';\n        } else if (o.boundingBox) { // check again in case user scrolled the view\n          if (pageX < offsetBox.left + shared.offsetX) {\n            shared.mirror.style.left = shared.clientX - (pageX - offsetBox.left) + 'px';\n          } else {\n            shared.mirror.style.left = shared.clientX - shared.mirrorWidth - (pageX - offsetBox.right) + 'px';\n          }\n        }\n      }\n      if (!o.lockX) {\n        if (!o.boundingBox || (pageY > offsetBox.top + shared.offsetY && pageY < offsetBox.bottom + shared.offsetYb)) {\n          shared.mirror.style.top = y + 'px';\n        } else if (o.boundingBox) { // check again in case user scrolled the view\n          if (pageY < offsetBox.top + shared.offsetY) {\n            shared.mirror.style.top = shared.clientY - (pageY - offsetBox.top) + 'px';\n          } else {\n            shared.mirror.style.top = shared.clientY - shared.mirrorHeight - (pageY - offsetBox.bottom) + 'px';\n          }\n        }\n      }\n\n      var elementBehindCursor = getElementBehindPoint(shared.mirror, shared.clientX, shared.clientY),\n        dropTarget = findDropTarget(elementBehindCursor, shared.clientX, shared.clientY),\n        changed = dropTarget !== shared.lastDropTarget;\n\n      if (elementBehindCursor !== shared.lastElementBehindCursor) {\n        fireEvent(elementBehindCursor, shared.dragOverEvents.dragularenter, !!dropTarget);\n        if (shared.lastElementBehindCursor) {\n          fireEvent(shared.lastElementBehindCursor, shared.dragOverEvents.dragularleave, elementBehindCursor);\n        }\n        shared.lastElementBehindCursor = elementBehindCursor;\n      }\n\n      if (changed) {\n        out();\n        shared.lastDropTarget = dropTarget;\n        over();\n      }\n\n      // do not copy in same container\n      if (dropTarget === shared.source && shared.copy && !o.copySortSource) {\n        if (getParent(shared.item)) {\n          shared.item.parentNode.removeChild(shared.item);\n        }\n        return;\n      }\n\n      var reference,\n        immediate = getImmediateChild(dropTarget, elementBehindCursor);\n\n      if (immediate !== null) {\n        reference = getReference(dropTarget, immediate, shared.clientX, shared.clientY);\n      } else if (o.revertOnSpill === true && !shared.copy) {\n        // the case that mirror is not over valid target and reverting is on and copy is off\n        reference = shared.initialSibling;\n        dropTarget = shared.source;\n      } else {\n        // the case that mirror is not over valid target and removing is on or copy is on\n        if (shared.copy && getParent(shared.item)) {\n          // remove item or copy of item\n          shared.item.parentNode.removeChild(shared.item);\n        }\n        return;\n      }\n      if (reference === null ||\n        reference !== shared.item &&\n        reference !== nextEl(shared.item) &&\n        reference !== shared.currentSibling) {\n        // moving item/copy to new container from previous one\n        shared.currentSibling = reference;\n\n        dropTarget.insertBefore(shared.item, reference); // if reference is null item is inserted at the end\n\n        if (o.scope) {\n          o.scope.$emit(o.eventNames.dragularshadow, shared.item, dropTarget);\n        }\n      }\n\n      function moved(type) {\n        if (o.scope) {\n          o.scope.$emit(o.eventNames['dragular' + type], shared.item, shared.lastDropTarget, shared.source);\n        }\n        if (o.removeOnSpill === true) {\n          type === 'over' ? spillOver() : spillOut();\n        }\n      }\n\n      function over() {\n        if (changed) {\n          moved('over');\n        }\n      }\n\n      function out() {\n        if (shared.lastDropTarget) {\n          moved('out');\n        }\n      }\n    }\n\n    function spillOver() {\n      rmClass(shared.item, o.classes.hide);\n    }\n\n    function spillOut() {\n      if (drake.dragging) {\n        addClass(shared.item, o.classes.hide);\n      }\n    }\n\n    function scrollContainer(e) {\n      if (shared.target) {\n        var before = shared.target.scrollTop;\n        shared.target.scrollTop += e.deltaY;\n        // block scroll of the document when container can be scrolled\n        if (before !== shared.target.scrollTop) {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n    }\n\n    function renderMirrorImage() {\n      if (shared.mirror) {\n        return;\n      }\n      var rect = shared.sourceItem.getBoundingClientRect();\n      shared.mirror = shared.sourceItem.cloneNode(true);\n      shared.mirrorWidth = rect.width;\n      shared.mirrorHeight = rect.height;\n      shared.mirror.style.width = getRectWidth(rect) + 'px';\n      shared.mirror.style.height = getRectHeight(rect) + 'px';\n      rmClass(shared.mirror, o.classes.transit);\n      addClass(shared.mirror, o.classes.mirror);\n      o.mirrorContainer.appendChild(shared.mirror);\n      regEvent(docElm, 'on', 'mousemove', drag);\n      addClass(body, o.classes.unselectable);\n      regEvent(shared.mirror, 'on', 'wheel', scrollContainer);\n      if (o.scope) {\n        o.scope.$emit(o.eventNames.dragularcloned, shared.mirror, shared.sourceItem);\n      }\n    }\n\n    function removeMirrorImage() {\n      if (shared.mirror) {\n        rmClass(body, o.classes.unselectable);\n        regEvent(docElm, 'off', 'mousemove', drag);\n        regEvent(shared.mirror, 'off', 'wheel', scrollContainer);\n        if(getParent(shared.mirror)){\n          shared.mirror.parentNode.removeChild(shared.mirror);\n        }\n        shared.mirror = null;\n      }\n    }\n\n    function getImmediateChild(dropTarget, target) {\n      var immediate = target;\n      while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {\n        immediate = getParent(immediate);\n      }\n      if (immediate === docElm) {\n        return null;\n      }\n      return immediate;\n    }\n\n    function getReference(dropTarget, target, x, y) {\n      var horizontal = o.direction === 'horizontal';\n      return target !== dropTarget ? inside() : outside();\n\n      function outside() { // slower, but able to figure out any position\n        var len = dropTarget.children.length,\n          i, el, rect;\n        for (i = 0; i < len; i++) {\n          el = dropTarget.children[i];\n          rect = el.getBoundingClientRect();\n          if (horizontal && rect.left > x) {\n            return el;\n          }\n          if (!horizontal && rect.top > y) {\n            return el;\n          }\n        }\n        return null;\n      }\n\n      function inside() { // faster, but only available if dropped inside a child element\n        var rect = target.getBoundingClientRect();\n        if (horizontal) {\n          return resolve(x > rect.left + getRectWidth(rect) / 2);\n        }\n        return resolve(y > rect.top + getRectHeight(rect) / 2);\n      }\n\n      function resolve(after) {\n        return after ? nextEl(target) : target;\n      }\n    }\n\n    function isCopy(item, container) {\n      return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\n    }\n\n    function getScroll(scrollProp, offsetProp) {\n      if (typeof window[offsetProp] !== 'undefined') {\n        return window[offsetProp];\n      }\n      if (docElm.clientHeight) {\n        return docElm[scrollProp];\n      }\n      return body[scrollProp];\n    }\n\n    function getOffset(el) {\n      var rect = el.getBoundingClientRect(),\n        scrollTop = getScroll('scrollTop', 'pageYOffset'),\n        scrollLeft = getScroll('scrollLeft', 'pageXOffset');\n      return {\n        left: rect.left + scrollLeft,\n        right: rect.right + scrollLeft,\n        top: rect.top + scrollTop,\n        bottom: rect.bottom + scrollTop\n      };\n    }\n\n    function getElementBehindPoint(point, x, y) {\n      var p = point || {},\n        state = p.className,\n        el;\n      p.className += ' ' + o.classes.hide;\n      el = doc.elementFromPoint(x, y);\n      p.className = state;\n      return el;\n    }\n  } // end of service\n\n  /****************************************************************************************************************************/\n  /****************************************************************************************************************************/\n  /****************************************************************************************************************************/\n\n  // HELPERS FUNCTIONS:\n\n  function regEvent(el, op, type, fn) {\n    var touch = {\n        mouseup: 'touchend',\n        mousedown: 'touchstart',\n        mousemove: 'touchmove'\n      },\n      $el = angular.element(el);\n\n    if (touch[type]) {\n      $el[op](touch[type], fn);\n    }\n    $el[op](type, fn);\n  }\n\n  function never() {\n    return false;\n  }\n\n  function always() {\n    return true;\n  }\n  \n  // make array from array-like objects or from single element (based on bevacqua/atoa)\n  function makeArray(all, startIndex) {\n    if (Array.isArray(all)) {\n      return all;\n    }\n    if (all.length) { // is array-like\n      return Array.prototype.slice.call(all, startIndex);\n    } else { // is one element\n      return [all];\n    }\n  }\n\n  function whichMouseButton (e) {\n    if (e.touches !== void 0) { return e.touches.length; }\n    if (e.buttons !== undefined) { return e.buttons; }\n    if (e.which !== undefined) { return e.which; }\n    var button = e.button;\n    if (button !== undefined) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\n      return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);\n    }\n  }\n\n  function getRectWidth(rect) {\n    return rect.width || (rect.right - rect.left);\n  }\n\n  function getRectHeight(rect) {\n    return rect.height || (rect.bottom - rect.top);\n  }\n\n  function getEmptyObject() {\n    return {};\n  }\n\n  function nextEl(el) {\n    return el.nextElementSibling || manually();\n\n    function manually() {\n      var sibling = el;\n      do {\n        sibling = sibling.nextSibling;\n      } while (sibling && sibling.nodeType !== 1);\n      return sibling;\n    }\n  }\n\n  //Cannot use angular.isElement because we need to check plain dom element, no jQlite wrapped\n  function isElement(o) {\n    return (\n      typeof HTMLElement === 'object' ? o instanceof HTMLElement : //DOM2\n      o && typeof o === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string'\n    );\n  }\n\n  function lookupClass(className) {\n    var cached = shared.classesCache[className];\n    if (cached) {\n      cached.lastIndex = 0;\n    } else {\n      shared.classesCache[className] = cached = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', 'g');\n    }\n    return cached;\n  }\n\n  function addClass(el, className) {\n    var current = el.className;\n    if (!current.length) {\n      el.className = className;\n    } else if (!lookupClass(className).test(current)) {\n      el.className += ' ' + className;\n    }\n  }\n\n  function rmClass(el, className) {\n    el.className = el.className.replace(lookupClass(className), ' ').trim();\n  }\n\n  function getEventHost(e) {\n    // on touchend event, we have to use `e.changedTouches`\n    // see http://stackoverflow.com/questions/7192563/touchend-event-properties\n    // see https://github.com/bevacqua/dragula/issues/34\n    if (e.targetTouches && e.targetTouches.length) {\n      return e.targetTouches[0];\n    }\n    if (e.changedTouches && e.changedTouches.length) {\n      return e.changedTouches[0];\n    }\n    return e;\n  }\n\n  function getCoord(coord, e) {\n    var host = getEventHost(e);\n    var missMap = {\n      pageX: 'clientX', // IE8\n      pageY: 'clientY' // IE8\n    };\n    if (coord in missMap && !(coord in host) && missMap[coord] in host) {\n      coord = missMap[coord];\n    }\n\n    // Adding support for touch events, as they are not functional in the original\n    if (!host.type || host.type.indexOf('touch') < 0) {\n      return host[coord];\n    } else {\n      if (host.type.indexOf('end') === -1) {\n        // No clientX or clientY in a touch event\n        return host.originalEvent.touches[0][coord.replace('client', 'page')];\n      }\n      // Nothing should happen for touchend\n      return false;\n    }\n  }\n\n  function getParent (el) {\n    return el.parentNode === document ? null : el.parentNode;\n  }\n\n  function isInput (el) {\n    return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el);\n  }\n\n  function isEditable (el) {\n    if (!el) { return false; } // no parents were editable\n    if (el.contentEditable === 'false') { return false; } // stop the lookup\n    if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\n    return isEditable(getParent(el)); // contentEditable is set to 'inherit'\n  }\n\n  function domIndexOf(child, parent) {\n    return Array.prototype.indexOf.call(angular.element(parent).children(), child);\n  }\n\n  function fireEvent(target, e, extra) {\n    if (!target) {\n      return;\n    }\n    shared.extra = extra;\n    if (target.dispatchEvent) {\n      target.dispatchEvent(e);\n    } else {\n      target.fireEvent('on' + e.eventType, e);\n    }\n  }\n\n}]);\n\n},{\"./dragularModule\":2}]},{},[2]);\n"],"sourceRoot":"/source/"}