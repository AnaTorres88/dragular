{"version":3,"sources":["dragular.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","dragularModule","directive","dragularService","restrict","link","$scope","iElm","iAttrs","tryJson","json","JSON","parse","undefined","options","$eval","dragular","dragularModel","angular","extend","containersModel","./dragularModule",2,"dragularDirective","./dragularDirective.js","./dragularService.js",3,"factory","$rootScope","regEvent","el","op","type","fn","touch","mouseup","mousedown","mousemove","$el","element","never","always","getRectWidth","rect","width","right","left","getRectHeight","height","bottom","top","emptyObj","nextEl","manually","sibling","nextSibling","nodeType","nextElementSibling","isElement","HTMLElement","nodeName","lookupClass","className","cached","shared","classesCache","lastIndex","RegExp","addClass","current","test","rmClass","replace","trim","getEventHost","targetTouches","changedTouches","getCoord","coord","host","missMap","pageX","pageY","indexOf","originalEvent","touches","domIndexOf","child","parent","Array","prototype","children","fireEvent","target","extra","dispatchEvent","eventType","containersCtx","containers","mirror","source","item","copy","sourceItem","sourceModel","targetCtx","targetModel","lastDropTarget","offsetX","offsetY","moveX","moveY","offsetXr","offsetYb","clientX","clientY","mirrorWidth","mirrorHeight","initialSibling","currentSibling","initialIndex","currentIndex","isContainerModel","dragOverEvents","lastElementBehindCursor","grabbed","serviceFn","initialContainers","makeArray","all","startIndex","isArray","slice","removeContainers","applyAsync","changes","forEach","container","nameSpace","index","splice","events","remove","documentElement","release","grab","eventualMovements","startBecauseMouseMoved","movements","preventGrabbed","destroy","preventDefault","window","event","which","metaKey","ctrlKey","context","canStart","tagName","focus","end","start","direction","parentElement","parentHeight","offsetHeight","parentWidth","offsetWidth","childHeight","clientHeight","childWidth","clientWidth","offset","getOffset","boundingBox","classes","transit","renderMirrorImage","style","drag","drake","dragging","handle","isContainer","invalid","moves","manualStart","isCopy","cloneNode","scope","$emit","containerIndex","invalidTarget","drop","ungrab","elementBehindCursor","getElementBehindPoint","dropTarget","findDropTarget","copySortSource","removeOnSpill","cancel","emitDropEvent","isInitialPlacement","removeChild","dropElm","dropIndex","$applyAsync","dropElmModel","m","cleanup","revert","reverts","arguments","revertOnSpill","initial","insertBefore","removeMirrorImage","spillOut","accepted","accepts","immediate","getImmediateChild","reference","getReference","canBeAccepted","moved","spillOver","over","changed","out","offsetBox","x","y","lockY","lockX","hide","scrollContainer","before","scrollTop","deltaY","stopPropagation","getBoundingClientRect","mirrorContainer","appendChild","body","unselectable","outside","len","horizontal","inside","resolve","after","getScroll","scrollProp","offsetProp","scrollLeft","point","p","state","document","elementFromPoint","querySelectorAll","defaultClasses","dragOverEventNames","shLen","dragOverEvent","createEvent","initEvent","createEventObject","cleanEnviroment"],"mappings":"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","file":"dragular.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* global angular */\n'use strict';\n\n/**\n * dragular Directive by Luckylooke https://github.com/luckylooke/dragular\n * Angular version of dragula https://github.com/bevacqua/dragula\n */\n var dragularModule = require('./dragularModule');\n\n/**\n* @ngInject\n*/\n\ndragularModule.directive('dragular', ['dragularService', function(dragularService) {\n  return {\n    restrict: 'A',\n    link: function($scope, iElm, iAttrs) {\n\n      var options = $scope.$eval(iAttrs.dragular) || tryJson(iAttrs.dragular) || {};\n\n      function tryJson(json) {\n        try { // I dont like try catch solutions but I havent find sattisfying way of chcecking json validity.\n          return JSON.parse(json);\n        } catch (e) {\n          return undefined;\n        }\n      }\n\n      if(iAttrs.dragularModel){\n        options = angular.extend({containersModel: $scope.$eval(iAttrs.dragularModel)}, options);\n      }else if(options && options.containersModel && typeof options.containersModel === 'string'){\n        options.containersModel = $scope.$eval(options.containersModel);\n      }\n\n      dragularService(iElm[0], options);\n    }\n  };\n}]);\n\n},{\"./dragularModule\":2}],2:[function(require,module,exports){\n/* global angular */\n'use strict';\n\n\n\n/**\n * Dragular 3.0.2 by Luckylooke https://github.com/luckylooke/dragular\n * Angular version of dragula https://github.com/bevacqua/dragula\n */\nmodule.exports = angular.module('dragularModule', []);\n\n({\"dragularDirective\":require(\"./dragularDirective.js\"),\"dragularService\":require(\"./dragularService.js\")});\n\n},{\"./dragularDirective.js\":1,\"./dragularService.js\":3}],3:[function(require,module,exports){\n/* global angular */\n'use strict';\n\n/**\n * dragular Service by Luckylooke https://github.com/luckylooke/dragular\n * Angular version of dragula https://github.com/bevacqua/dragula\n */\n\nvar dragularModule = require('./dragularModule');\n\n/**\n * @ngInject\n */\n\ndragularModule.factory('dragularService', ['$rootScope', function dragula($rootScope) {\n\n  var shared = { // function returned as service\n      classesCache: {}, // classes lookup cache\n      containersCtx: {}, // containers model\n      containers: {}, // containers managed by the drake\n      mirror: null, // mirror image\n      source: null, // source container\n      item: null, // item being dragged\n      copy: null, // isCopy flag\n      sourceItem: null, // item originaly dragged if copy is enabled\n      sourceModel: null, // source container model\n      target: null, // droppable container under drag item\n      targetCtx: null, // target container context\n      targetModel: null, // target container model\n      lastDropTarget: null, // last container item was over\n      offsetX: null, // reference x\n      offsetY: null, // reference y\n      moveX: null, // reference move x\n      moveY: null, // reference move y\n      offsetXr: null, // reference x right for boundingBox feature\n      offsetYb: null, // reference y bottom for boundingBox feature\n      clientX: null, // cache client x, init at grab, update at drag\n      clientY: null, // cache client y, init at grab, update at drag\n      mirrorWidth: null, // mirror width for boundingBox feature\n      mirrorHeight: null, // mirror height for boundingBox feature\n      initialSibling: null, // reference sibling when grabbed\n      currentSibling: null, // reference sibling now\n      initialIndex: null, // reference model index when grabbed\n      currentIndex: null, // reference model index now\n      isContainerModel: null, // if o.isContainer is used, model can be provided as well, here it is kept\n      dragOverEvents: {}, // drag over events fired on element behind cursor\n      lastElementBehindCursor: null, // last element behind cursor\n      grabbed: null // holds mousedown context until first mousemove\n    },\n    serviceFn = function(initialContainers, options) {\n\n      if (arguments.length === 1 && !Array.isArray(initialContainers) && !angular.isElement(initialContainers) && !initialContainers[0] && typeof initialContainers !== 'string') {\n        // then containers are not provided, only options\n        options = initialContainers;\n        initialContainers = [];\n      } else if (typeof initialContainers === 'string') {\n        initialContainers = document.querySelectorAll(initialContainers);\n      }\n\n      var body = document.body,\n        documentElement = document.documentElement,\n        defaultClasses = {\n          mirror: 'gu-mirror',\n          hide: 'gu-hide',\n          unselectable: 'gu-unselectable',\n          transit: 'gu-transit'\n        },\n        isContainer, // internal isContainer\n        o = { // options\n          dragOverEventNames: ['dragularenter', 'dragularleave', 'dragularrelease'],\n          classes: defaultClasses,\n          containers: false,\n          moves: always,\n          accepts: always,\n          canBeAccepted: always,\n          isContainer: never,\n          copy: false,\n          invalid: invalidTarget,\n          revertOnSpill: false,\n          removeOnSpill: false,\n          lockX: false,\n          lockY: false,\n          boundingBox: false,\n          containersModel: false,\n          isContainerModel: emptyObj\n        };\n\n      if (!isElement(o.boundingBox)) {\n        o.boundingBox = null;\n      }\n\n      if (options && options.classes) {\n        angular.extend(defaultClasses, options.classes);\n        angular.extend(options.classes, defaultClasses);\n      }\n\n      angular.extend(o, options);\n\n      if (!o.mirrorContainer) {\n        o.mirrorContainer = document.body;\n      }\n\n      // get initial containers from options or parameter or fall back to empty array (containers can be also added later)\n      initialContainers = o.containers || initialContainers || [];\n      initialContainers = makeArray(initialContainers);\n\n      if (o.containersModel) {\n        //                            is 2D array?\n        o.containersModel = Array.isArray(o.containersModel[0]) ? o.containersModel : [o.containersModel];\n      } else {\n        o.containersModel = [];\n      }\n\n      // feed containers groups and optionaly shadow it by models\n      if (!o.nameSpace) {\n        o.nameSpace = ['dragularCommon'];\n      }\n      if (!Array.isArray(o.nameSpace)) {\n        o.nameSpace = [o.nameSpace];\n      }\n      o.nameSpace.forEach(function eachNameSpace(nameSpace) {\n        if (!shared.containers[nameSpace]) {\n          shared.containers[nameSpace] = [];\n          shared.containersCtx[nameSpace] = [];\n        }\n        var len = initialContainers.length,\n          shLen = shared.containers[nameSpace].length;\n        for (var i = 0; i < len; i++) {\n          shared.containers[nameSpace][i + shLen] = initialContainers[i];\n          shared.containersCtx[nameSpace][i + shLen] = {\n            o: o,\n            m: o.containersModel[i] // can be undefined\n          };\n        }\n      });\n\n      //register events\n      events();\n\n      angular.forEach(o.dragOverEventNames, function prepareDragOverEvents(dragOverEvent) {\n        if (document.createEvent) {\n          shared.dragOverEvents[dragOverEvent] = document.createEvent('HTMLEvents');\n          shared.dragOverEvents[dragOverEvent].initEvent(dragOverEvent, true, true);\n        } else {\n          shared.dragOverEvents[dragOverEvent] = document.createEventObject();\n          shared.dragOverEvents[dragOverEvent].eventType = dragOverEvent;\n        }\n      });\n\n      isContainer = function isContainer(el) {\n        var i = o.nameSpace.length;\n        while (i--) {\n          if (shared.containers[o.nameSpace[i]].indexOf(el) !== -1) {\n            return true;\n          }\n        }\n        if (o.isContainer(el)) {\n          shared.isContainerModel = o.isContainerModel(el);\n          return true;\n        } else {\n          shared.isContainerModel = null;\n        }\n        return false;\n      };\n\n      var drake = {\n        containers: shared.containers,\n        containersCtx: shared.containersCtx,\n        isContainer: isContainer,\n        start: manualStart,\n        end: end,\n        cancel: cancel,\n        remove: remove,\n        destroy: destroy,\n        dragging: false\n      };\n\n      return drake;\n\n      // make array from array-like objects or from single element (based on bevacqua/atoa)\n      function makeArray(all, startIndex) {\n        if (Array.isArray(all)) {\n          return all;\n        }\n        if (all.length) { // is array-like\n          return Array.prototype.slice.call(all, startIndex);\n        } else { // is one element\n          return [all];\n        }\n      }\n\n      // add or remove containers - deprecated\n      function removeContainers(all) {\n        $rootScope.applyAsync(function applyDestroyed() {\n          var changes = Array.isArray(all) ? all : makeArray(all);\n          changes.forEach(function forEachContainer(container) {\n            angular.forEach(o.nameSpace, function forEachNs(nameSpace) {\n              var index;\n              index = shared.containers[nameSpace].indexOf(container);\n              shared.containers[nameSpace].splice(index, 1);\n              shared.containersCtx[nameSpace].splice(index, 1);\n            });\n          });\n        });\n      }\n\n      function events(remove) {\n        var op = remove ? 'off' : 'on';\n        regEvent(documentElement, op, 'mouseup', release);\n        // regEvent(documentElement, op, 'mousemove', startBecauseMouseMoved);\n\n        initialContainers.forEach(function addMouseDown(container) {\n          regEvent(container, 'on', 'mousedown', grab);\n        });\n      }\n\n      function eventualMovements(remove) {\n        var op = remove ? 'off' : 'on';\n        regEvent(documentElement, op, 'mousemove', startBecauseMouseMoved);\n      }\n\n      function movements(remove) {\n        var op = remove ? 'off' : 'on';\n        regEvent(documentElement, op, 'selectstart', preventGrabbed); // IE8\n        regEvent(documentElement, op, 'click', preventGrabbed);\n        regEvent(documentElement, op, 'touchmove', preventGrabbed); // fixes touch devices scrolling while drag\n      }\n\n      function destroy() {\n        events(true);\n        removeContainers(initialContainers);\n        release({});\n      }\n\n      function preventGrabbed(e) {\n        if (shared.grabbed) {\n          e.preventDefault();\n        }\n      }\n\n      function grab(e) {\n        e = e || window.event;\n        shared.moveX = e.clientX;\n        shared.moveY = e.clientY;\n\n        // filter some odd situations\n        if ((e.which !== 0 && e.which !== 1) || e.metaKey || e.ctrlKey) {\n          return; // we only care about honest-to-god left clicks and touch events\n        }\n\n        var context = canStart(e.target);\n        if (!context || !context.item) {\n          return;\n        }\n\n        shared.grabbed = context;\n        eventualMovements();\n        if (e.type === 'mousedown') {\n          e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\n          if (context.item.tagName === 'INPUT' || context.item.tagName === 'TEXTAREA') {\n            context.item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\n          }\n        }\n      }\n\n      function startBecauseMouseMoved(e) {\n        var grabbed = shared.grabbed; // call to end() unsets shared.grabbed\n\n        if (!grabbed) {\n          return;\n        }\n\n        if (e.clientX === shared.moveX && e.clientY === shared.moveY) {\n          return;\n        }\n\n        eventualMovements(true); // remove mousemove listener\n        movements();\n        end();\n        start(grabbed);\n\n        // automaticly detect direction of elements if not set in options\n        if (!o.direction) {\n          var parent = shared.sourceItem.parentElement,\n            parentHeight = parent.offsetHeight,\n            parentWidth = parent.offsetWidth,\n            childHeight = shared.sourceItem.clientHeight,\n            childWidth = shared.sourceItem.clientWidth;\n          o.direction = parentHeight / childHeight < parentWidth / childWidth ? 'horizontal' : 'vertical';\n        }\n\n        // get initial coordinates, used to render shared.mirror for first time\n        var offset = getOffset(shared.sourceItem);\n        shared.offsetX = getCoord('pageX', e) - offset.left;\n        shared.offsetY = getCoord('pageY', e) - offset.top;\n        shared.clientX = getCoord('clientX', e);\n        shared.clientY = getCoord('clientY', e);\n\n        // limiting area of shared.mirror movement, get initial coordinates\n        if (o.boundingBox) {\n          shared.offsetXr = getCoord('pageX', e) - offset.right;\n          shared.offsetYb = getCoord('pageY', e) - offset.bottom;\n        }\n\n        e.preventDefault();\n\n        addClass(shared.item, o.classes.transit);\n        renderMirrorImage();\n        // initial position\n        shared.mirror.style.left = shared.clientX - shared.offsetX + 'px';\n        shared.mirror.style.top = shared.clientY - shared.offsetY + 'px';\n\n        drag(e);\n      }\n\n\n      function canStart(item) {\n        if (drake.dragging && shared.mirror) {\n          return; // already dragging\n        }\n\n        var handle = item;\n\n        while (item.parentElement &&\n          !isContainer(item.parentElement)) {\n          // break loop if user tries to drag item which is considered invalid handle\n          if (o.invalid(item, handle)) {\n            return;\n          }\n          item = item.parentElement; // drag target should be immediate child of container\n          if (!item) {\n            return;\n          }\n        }\n\n        var source = item.parentElement;\n        if (!source ||\n          o.invalid(item, handle) ||\n          !o.moves(item, source, handle, nextEl(item))) {\n          return;\n        }\n\n        console.log({\n          item: item,\n          source: source\n        });\n\n        return {\n          item: item,\n          source: source\n        };\n      }\n\n      function manualStart(item) {\n        var context = canStart(item);\n        if (context) {\n          start(context);\n        }\n      }\n\n      function start(context) {\n        shared.sourceItem = shared.item = context.item;\n        shared.source = context.source;\n        shared.initialSibling = shared.currentSibling = nextEl(context.item);\n\n        if (isCopy(context.item, context.source)) {\n          shared.item = context.item.cloneNode(true);\n          shared.copy = true;\n          if (o.scope) {\n            o.scope.$emit('dragularcloned', shared.item, context.item);\n          }\n        } else {\n          shared.copy = false;\n        }\n\n        // prepare models operations\n        var containerIndex = initialContainers.indexOf(context.source);\n        shared.sourceModel = o.containersModel[containerIndex];\n        shared.initialIndex = domIndexOf(context.item, context.source);\n\n        drake.dragging = true;\n        if (o.scope) {\n          o.scope.$emit('dragulardrag', shared.sourceItem, shared.source);\n        }\n\n        return true;\n      }\n\n      function invalidTarget() {\n        return false;\n      }\n\n      function end() {\n        if (!drake.dragging || !shared.item) {\n          console.log('end return');\n          return;\n        }\n        console.log('end drop');\n        drop(shared.item, shared.item.parentElement);\n      }\n\n      function ungrab() {\n        shared.grabbed = false;\n        eventualMovements(true);\n        movements(true);\n      }\n\n      function release(e) {\n        ungrab();\n        if (!drake.dragging) {\n          return;\n        }\n        e = e || window.event;\n\n        shared.clientX = getCoord('clientX', e);\n        shared.clientY = getCoord('clientY', e);\n\n        var elementBehindCursor = getElementBehindPoint(shared.mirror, shared.clientX, shared.clientY),\n          dropTarget = findDropTarget(elementBehindCursor, shared.clientX, shared.clientY);\n\n        if (dropTarget && ((shared.copy && o.copySortSource) || (!shared.copy || dropTarget !== shared.source))) {\n          // found valid target and (is not copy case or target is not initial container)\n          drop(shared.item, dropTarget);\n        } else if (o.removeOnSpill) {\n          remove();\n        } else {\n          cancel();\n        }\n\n        // after release there is no container hovered\n        shared.target = null;\n\n        if (shared.lastElementBehindCursor) {\n          fireEvent(shared.lastElementBehindCursor, shared.dragOverEvents['dragularrelease'], elementBehindCursor);\n        }\n\n        if (o.scope) {\n          o.scope.$emit('dragularrelease', shared.item, shared.source);\n        }\n      }\n\n      function drop(item, target) {\n        if (shared.copy && o.copySortSource && target === shared.source) {\n          item.parentElement.removeChild(shared.sourceItem);\n        }\n\n        function emitDropEvent() {\n          if (o.scope) {\n            if (isInitialPlacement(target)) {\n              o.scope.$emit('dragularcancel', item, shared.source, shared.sourceModel, shared.initialIndex);\n            } else {\n              o.scope.$emit('dragulardrop', item, target, shared.source, shared.sourceModel, shared.initialIndex, shared.targetModel);\n            }\n          }\n        }\n\n        if (shared.sourceModel && !isInitialPlacement(target)) {\n          var dropElm = item,\n            dropIndex = domIndexOf(dropElm, target);\n          $rootScope.$applyAsync(function applyDrop() {\n            if (target === shared.source) {\n              shared.sourceModel.splice(dropIndex, 0, shared.sourceModel.splice(shared.initialIndex, 1)[0]);\n            } else {\n              shared.dropElmModel = shared.copy ? angular.copy(shared.sourceModel[shared.initialIndex]) : shared.sourceModel[shared.initialIndex];\n\n              if (!shared.isContainerModel) {\n                shared.targetModel = shared.targetCtx.m;\n              } else {\n                shared.targetModel = shared.isContainerModel;\n              }\n\n              target.removeChild(dropElm); // element must be removed for ngRepeat to apply correctly\n\n              if (!shared.copy) {\n                shared.sourceModel.splice(shared.initialIndex, 1);\n              }\n              shared.targetModel.splice(dropIndex, 0, shared.dropElmModel);\n            }\n\n            if (item.parentElement) {\n              item.parentElement.removeChild(item);\n            }\n\n            emitDropEvent();\n            cleanup();\n          });\n        } else {\n          emitDropEvent();\n          cleanup();\n        }\n      }\n\n      function remove() {\n        if (!drake.dragging) {\n          return;\n        }\n        var parent = shared.item.parentElement;\n\n        if (parent) {\n          parent.removeChild(shared.item);\n        }\n\n        if (shared.sourceModel) {\n          $rootScope.$applyAsync(function removeModel() {\n            shared.sourceModel.splice(shared.initialIndex, 1);\n            cleanup();\n          });\n        }\n\n        if (o.scope) {\n          o.scope.$emit(shared.copy ? 'dragularcancel' : 'dragularremove', shared.item, parent, shared.sourceModel, shared.initialIndex);\n        }\n        if (!shared.sourceModel) {\n          cleanup();\n        }\n      }\n\n      function cancel(revert) {\n        if (!drake.dragging) {\n          return;\n        }\n        var reverts = arguments.length > 0 ? revert : o.revertOnSpill,\n          parent = shared.item.parentElement;\n\n        var initial = isInitialPlacement(parent);\n        if (!initial && !shared.copy && reverts) {\n          shared.source.insertBefore(shared.item, shared.initialSibling);\n        }\n        if (shared.sourceModel && !shared.copy && !reverts) {\n          drop(shared.item, parent);\n        } else if (o.scope) {\n          if (initial || reverts) {\n            o.scope.$emit('dragularcancel', shared.item, shared.source);\n          }\n        }\n\n        if (!shared.sourceModel || shared.copy || reverts || initial) {\n          cleanup();\n        }\n      }\n\n      function cleanup() {\n        ungrab();\n        removeMirrorImage();\n\n        if (shared.item) {\n          rmClass(shared.item, o.classes.transit);\n        }\n\n        drake.dragging = false;\n\n        if (o.removeOnSpill === true) {\n          spillOut();\n        }\n\n        if (o.scope) {\n          o.scope.$emit('dragularout', shared.item, shared.lastDropTarget, shared.source);\n          o.scope.$emit('dragulardragend', shared.item);\n        }\n\n        shared.source = shared.item = shared.sourceItem = shared.initialSibling = shared.currentSibling = shared.sourceModel = null;\n        shared.initialIndex = shared.currentIndex = shared.lastDropTarget = shared.isContainerModel = shared.targetModel = null;\n        shared.dropElmModel = shared.targetCtx = shared.copy = shared.moveX = shared.moveY = null;\n      }\n\n      // is item currently placed in original container and original position?\n      function isInitialPlacement(target, s) {\n        var sibling = s || (shared.mirror ? shared.currentSibling : nextEl(shared.item));\n        return target === shared.source && sibling === shared.initialSibling;\n      }\n\n      // find valid drop container\n      function findDropTarget(elementBehindCursor, clientX, clientY) {\n        var target = elementBehindCursor;\n\n        while (target && !accepted()) {\n          target = target.parentElement;\n        }\n        return target;\n\n        function accepted() {\n          var accepts = false;\n\n          if (isContainer(target)) { // is droppable?\n\n            var immediate = getImmediateChild(target, elementBehindCursor),\n              reference = getReference(target, immediate, clientX, clientY),\n              initial = isInitialPlacement(target, reference),\n              i = o.nameSpace.length;\n\n            while (i--) {\n              if (shared.containers[o.nameSpace[i]].indexOf(target) !== -1) {\n                shared.targetCtx = shared.containersCtx[o.nameSpace[i]][shared.containers[o.nameSpace[i]].indexOf(target)];\n                break;\n              }\n              if (!shared.targetCtx) {\n                shared.targetCtx = shared.containersCtx['dragularCommon'][shared.containers['dragularCommon'].indexOf(target)];\n              }\n            }\n\n            accepts = initial ||\n              (shared.targetCtx.o.accepts(shared.item, target, shared.source, reference, shared.sourceModel, shared.initialIndex) &&\n                o.canBeAccepted(shared.item, target, shared.source, reference, shared.sourceModel, shared.initialIndex));\n\n            if (shared.target !== target) { // used for scroll issue\n              shared.target = target;\n            }\n          }\n          return accepts;\n        }\n      }\n\n      function drag(e) {\n        if (!shared.mirror) {\n          return;\n        }\n        e = e || window.event;\n\n        // update coordinates\n        shared.clientX = getCoord('clientX', e);\n        shared.clientY = getCoord('clientY', e);\n\n        // count mirror coordiates\n        var x = shared.clientX - shared.offsetX,\n          y = shared.clientY - shared.offsetY,\n          pageX,\n          pageY,\n          offsetBox;\n\n        // fill extra properties if boundingBox is used\n        if (o.boundingBox) {\n          pageX = getCoord('pageX', e);\n          pageY = getCoord('pageY', e);\n          offsetBox = getOffset(o.boundingBox);\n        }\n\n        if (!o.lockY) {\n          if (!o.boundingBox || (pageX > offsetBox.left + shared.offsetX && pageX < offsetBox.right + shared.offsetXr)) {\n            shared.mirror.style.left = x + 'px';\n          } else if (o.boundingBox) { // check again in case user scrolled the view\n            if (pageX < offsetBox.left + shared.offsetX) {\n              shared.mirror.style.left = shared.clientX - (pageX - offsetBox.left) + 'px';\n            } else {\n              shared.mirror.style.left = shared.clientX - shared.mirrorWidth - (pageX - offsetBox.right) + 'px';\n            }\n          }\n        }\n        if (!o.lockX) {\n          if (!o.boundingBox || (pageY > offsetBox.top + shared.offsetY && pageY < offsetBox.bottom + shared.offsetYb)) {\n            shared.mirror.style.top = y + 'px';\n          } else if (o.boundingBox) { // check again in case user scrolled the view\n            if (pageY < offsetBox.top + shared.offsetY) {\n              shared.mirror.style.top = shared.clientY - (pageY - offsetBox.top) + 'px';\n            } else {\n              shared.mirror.style.top = shared.clientY - shared.mirrorHeight - (pageY - offsetBox.bottom) + 'px';\n            }\n          }\n        }\n\n        var elementBehindCursor = getElementBehindPoint(shared.mirror, shared.clientX, shared.clientY),\n          dropTarget = findDropTarget(elementBehindCursor, shared.clientX, shared.clientY),\n          changed = dropTarget !== shared.lastDropTarget;\n\n        if (elementBehindCursor !== shared.lastElementBehindCursor) {\n          fireEvent(elementBehindCursor, shared.dragOverEvents['dragularenter'], !!dropTarget);\n          if (shared.lastElementBehindCursor) {\n            fireEvent(shared.lastElementBehindCursor, shared.dragOverEvents['dragularleave'], elementBehindCursor);\n          }\n          shared.lastElementBehindCursor = elementBehindCursor;\n        }\n\n        if (changed) {\n          out();\n          shared.lastDropTarget = dropTarget;\n          over();\n        }\n\n        // do not copy in same container\n        if (dropTarget === shared.source && shared.copy && !o.copySortSource) {\n          if (shared.item.parentElement) {\n            shared.item.parentElement.removeChild(shared.item);\n          }\n          return;\n        }\n\n        var reference,\n          immediate = getImmediateChild(dropTarget, elementBehindCursor);\n\n        if (immediate !== null) {\n          reference = getReference(dropTarget, immediate, shared.clientX, shared.clientY);\n        } else if (o.revertOnSpill === true && !shared.copy) {\n          // the case that mirror is not over valid target and reverting is on and copy is off\n          reference = shared.initialSibling;\n          dropTarget = shared.source;\n        } else {\n          // the case that mirror is not over valid target and removing is on or copy is on\n          if (shared.copy && shared.item.parentElement !== null) {\n            // remove item or copy of item\n            shared.item.parentElement.removeChild(shared.item);\n          }\n          return;\n        }\n        if (reference === null ||\n          reference !== shared.item &&\n          reference !== nextEl(shared.item) &&\n          reference !== shared.currentSibling) {\n          // moving item/copy to new container from previous one\n          shared.currentSibling = reference;\n\n          dropTarget.insertBefore(shared.item, reference); // if reference is null item is inserted at the end\n\n          if (o.scope) {\n            o.scope.$emit('dragularshadow', shared.item, dropTarget);\n          }\n        }\n\n        function moved(type) {\n          if (o.scope) {\n            o.scope.$emit('dragular' + type, shared.item, shared.lastDropTarget, shared.source);\n          }\n          if (o.removeOnSpill === true) {\n            type === 'over' ? spillOver() : spillOut();\n          }\n        }\n\n        function over() {\n          if (changed) {\n            moved('over');\n          }\n        }\n\n        function out() {\n          if (shared.lastDropTarget) {\n            moved('out');\n          }\n        }\n      }\n\n      function spillOver() {\n        rmClass(shared.item, o.classes.hide);\n      }\n\n      function spillOut() {\n        if (drake.dragging) {\n          addClass(shared.item, o.classes.hide);\n        }\n      }\n\n      function scrollContainer(e) {\n        if (shared.target) {\n          var before = shared.target.scrollTop;\n          shared.target.scrollTop += e.deltaY;\n          // block scroll of the document when container can be scrolled\n          if (before !== shared.target.scrollTop) {\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        }\n      }\n\n      function renderMirrorImage() {\n        if (shared.mirror) {\n          return;\n        }\n        var rect = shared.sourceItem.getBoundingClientRect();\n        shared.mirror = shared.sourceItem.cloneNode(true);\n        shared.mirrorWidth = rect.width;\n        shared.mirrorHeight = rect.height;\n        shared.mirror.style.width = getRectWidth(rect) + 'px';\n        shared.mirror.style.height = getRectHeight(rect) + 'px';\n        rmClass(shared.mirror, o.classes.transit);\n        addClass(shared.mirror, o.classes.mirror);\n        o.mirrorContainer.appendChild(shared.mirror);\n        regEvent(documentElement, 'on', 'mousemove', drag);\n        addClass(body, o.classes.unselectable);\n        regEvent(shared.mirror, 'on', 'wheel', scrollContainer);\n        if (o.scope) {\n          o.scope.$emit('dragularcloned', shared.mirror, shared.sourceItem);\n        }\n      }\n\n      function removeMirrorImage() {\n        if (shared.mirror) {\n          rmClass(body, o.classes.unselectable);\n          regEvent(documentElement, 'off', 'mousemove', drag);\n          regEvent(shared.mirror, 'off', 'wheel', scrollContainer);\n          shared.mirror.parentElement.removeChild(shared.mirror);\n          shared.mirror = null;\n        }\n      }\n\n      function getImmediateChild(dropTarget, target) {\n        var immediate = target;\n        while (immediate !== dropTarget && immediate.parentElement !== dropTarget) {\n          immediate = immediate.parentElement;\n        }\n        if (immediate === documentElement) {\n          return null;\n        }\n        return immediate;\n      }\n\n      function getReference(dropTarget, target, x, y) {\n        var horizontal = o.direction === 'horizontal',\n          reference = target !== dropTarget ? inside() : outside();\n        return reference;\n\n        function outside() { // slower, but able to figure out any position\n          var len = dropTarget.children.length,\n            i, el, rect;\n          for (i = 0; i < len; i++) {\n            el = dropTarget.children[i];\n            rect = el.getBoundingClientRect();\n            if (horizontal && rect.left > x) {\n              return el;\n            }\n            if (!horizontal && rect.top > y) {\n              return el;\n            }\n          }\n          return null;\n        }\n\n        function inside() { // faster, but only available if dropped inside a child element\n          var rect = target.getBoundingClientRect();\n          if (horizontal) {\n            return resolve(x > rect.left + getRectWidth(rect) / 2);\n          }\n          return resolve(y > rect.top + getRectHeight(rect) / 2);\n        }\n\n        function resolve(after) {\n          return after ? nextEl(target) : target;\n        }\n      }\n\n      function isCopy(item, container) {\n        return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\n      }\n\n      function getScroll(scrollProp, offsetProp) {\n        if (typeof window[offsetProp] !== 'undefined') {\n          return window[offsetProp];\n        }\n        if (documentElement.clientHeight) {\n          return documentElement[scrollProp];\n        }\n        return body[scrollProp];\n      }\n\n      function getOffset(el) {\n        var rect = el.getBoundingClientRect(),\n          scrollTop = getScroll('scrollTop', 'pageYOffset'),\n          scrollLeft = getScroll('scrollLeft', 'pageXOffset');\n        return {\n          left: rect.left + scrollLeft,\n          right: rect.right + scrollLeft,\n          top: rect.top + scrollTop,\n          bottom: rect.bottom + scrollTop\n        };\n      }\n\n      function getElementBehindPoint(point, x, y) {\n        var p = point || {},\n          state = p.className,\n          el;\n        p.className += ' ' + o.classes.hide;\n        el = document.elementFromPoint(x, y);\n        p.className = state;\n        return el;\n      }\n    };\n\n  // clean common/shared objects\n  serviceFn.cleanEnviroment = function cleanEnviroment() {\n    shared.classesCache = {};\n    shared.containersCtx = {};\n    shared.containers = {};\n    shared.mirror = undefined;\n  };\n\n  serviceFn.shared = shared;\n\n  return serviceFn;\n\n  /****************************************************************************************************************************/\n  /****************************************************************************************************************************/\n  /****************************************************************************************************************************/\n\n  // HELPERS FUNCTIONS:\n\n  function regEvent(el, op, type, fn) {\n    var touch = {\n        mouseup: 'touchend',\n        mousedown: 'touchstart',\n        mousemove: 'touchmove'\n      },\n      $el = angular.element(el);\n\n    if (touch[type]) {\n      $el[op](touch[type], fn);\n    }\n    $el[op](type, fn);\n  }\n\n  function never() {\n    return false;\n  }\n\n  function always() {\n    return true;\n  }\n\n  function getRectWidth(rect) {\n    return rect.width || (rect.right - rect.left);\n  }\n\n  function getRectHeight(rect) {\n    return rect.height || (rect.bottom - rect.top);\n  }\n\n  function emptyObj() {\n    return {};\n  }\n\n  function nextEl(el) {\n    return el.nextElementSibling || manually();\n\n    function manually() {\n      var sibling = el;\n      do {\n        sibling = sibling.nextSibling;\n      } while (sibling && sibling.nodeType !== 1);\n      return sibling;\n    }\n  }\n\n  //Cannot use angular.isElement because we need to check plain dom element, no jQlite wrapped\n  function isElement(o) {\n    return (\n      typeof HTMLElement === 'object' ? o instanceof HTMLElement : //DOM2\n      o && typeof o === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string'\n    );\n  }\n\n  function lookupClass(className) {\n    var cached = shared.classesCache[className];\n    if (cached) {\n      cached.lastIndex = 0;\n    } else {\n      shared.classesCache[className] = cached = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', 'g');\n    }\n    return cached;\n  }\n\n  function addClass(el, className) {\n    var current = el.className;\n    if (!current.length) {\n      el.className = className;\n    } else if (!lookupClass(className).test(current)) {\n      el.className += ' ' + className;\n    }\n  }\n\n  function rmClass(el, className) {\n    el.className = el.className.replace(lookupClass(className), ' ').trim();\n  }\n\n  function getEventHost(e) {\n    // on touchend event, we have to use `e.changedTouches`\n    // see http://stackoverflow.com/questions/7192563/touchend-event-properties\n    // see https://github.com/bevacqua/dragula/issues/34\n    if (e.targetTouches && e.targetTouches.length) {\n      return e.targetTouches[0];\n    }\n    if (e.changedTouches && e.changedTouches.length) {\n      return e.changedTouches[0];\n    }\n    return e;\n  }\n\n  function getCoord(coord, e) {\n    var host = getEventHost(e);\n    var missMap = {\n      pageX: 'clientX', // IE8\n      pageY: 'clientY' // IE8\n    };\n    if (coord in missMap && !(coord in host) && missMap[coord] in host) {\n      coord = missMap[coord];\n    }\n\n    // Adding support for touch events, as they are not functional in the original\n    if (host.type.indexOf('touch') < 0) {\n      return host[coord];\n    } else {\n      if (host.type.indexOf('end') > -1) {\n        // Nothing should happen for touchend\n        return;\n      } else {\n        // No clientX or clientY in a touch event\n        return host.originalEvent.touches[0][coord.replace('client', 'page')];\n      }\n    }\n  }\n\n  function domIndexOf(child, parent) {\n    return Array.prototype.indexOf.call(angular.element(parent).children(), child);\n  }\n\n  function fireEvent(target, e, extra) {\n    if (!target) {\n      return;\n    }\n    shared.extra = extra;\n    if (target.dispatchEvent) {\n      target.dispatchEvent(e);\n    } else {\n      target.fireEvent('on' + e.eventType, e);\n    }\n  }\n\n}]);\n\n},{\"./dragularModule\":2}]},{},[2]);\n"],"sourceRoot":"/source/"}