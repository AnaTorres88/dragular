{"version":3,"sources":["dragular.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","dragularModule","directive","dragularService","restrict","link","$scope","iElm","iAttrs","tryJson","json","JSON","parse","options","$eval","dragular","dragularModel","angular","extend","containersModel","./dragularModule",2,"dragularDirective","./dragularDirective.js","./dragularService.js",3,"factory","$rootScope","regEvent","el","op","type","fn","touch","mouseup","mousedown","mousemove","$el","element","never","always","getRectWidth","rect","width","right","left","getRectHeight","height","bottom","top","emptyObj","nextEl","manually","sibling","nextSibling","nodeType","nextElementSibling","isElement","HTMLElement","nodeName","lookupClass","className","cached","shared","classesCache","lastIndex","RegExp","addClass","current","test","rmClass","replace","trim","getEventHost","targetTouches","changedTouches","getCoord","coord","host","missMap","pageX","pageY","indexOf","originalEvent","touches","whichMouseButton","undefined","buttons","which","button","getParent","parentNode","document","isInput","tagName","isEditable","contentEditable","domIndexOf","child","parent","Array","prototype","children","fireEvent","target","extra","dispatchEvent","eventType","containersCtx","containers","mirror","source","item","copy","sourceItem","sourceModel","targetCtx","targetModel","lastDropTarget","offsetX","offsetY","moveX","moveY","offsetXr","offsetYb","clientX","clientY","mirrorWidth","mirrorHeight","initialSibling","currentSibling","initialIndex","currentIndex","isContainerModel","dragOverEvents","lastElementBehindCursor","grabbed","serviceFn","initialContainers","makeArray","all","startIndex","isArray","slice","removeContainers","$applyAsync","changes","forEach","container","nameSpace","index","splice","events","remove","docElm","release","grab","eventualMovements","startBecauseMouseMoved","movements","preventGrabbed","destroy","preventDefault","window","event","metaKey","ctrlKey","context","canStart","focus","drake","dragging","ignoreInputTextSelection","elementBehindCursor","doc","elementFromPoint","end","start","direction","parentHeight","offsetHeight","parentWidth","offsetWidth","childHeight","clientHeight","childWidth","clientWidth","offset","getOffset","boundingBox","classes","transit","renderMirrorImage","style","drag","handle","isContainer","invalid","moves","manualStart","isCopy","cloneNode","scope","$emit","containerIndex","invalidTarget","drop","ungrab","getElementBehindPoint","dropTarget","findDropTarget","copySortSource","removeOnSpill","cancel","emitDropEvent","isInitialPlacement","dropIndex","removeChild","dropElm","dropElmModel","m","cleanup","revert","reverts","arguments","revertOnSpill","initial","insertBefore","removeMirrorImage","spillOut","accepted","accepts","immediate","getImmediateChild","reference","getReference","canBeAccepted","moved","spillOver","over","changed","out","offsetBox","x","y","lockY","lockX","hide","scrollContainer","before","scrollTop","deltaY","stopPropagation","getBoundingClientRect","mirrorContainer","appendChild","body","unselectable","outside","len","horizontal","inside","resolve","after","getScroll","scrollProp","offsetProp","scrollLeft","point","p","state","querySelectorAll","documentElement","defaultClasses","dragOverEventNames","shLen","dragOverEvent","createEvent","initEvent","createEventObject","cleanEnviroment"],"mappings":"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","file":"dragular.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* global angular */\n'use strict';\n\n/**\n * dragular Directive by Luckylooke https://github.com/luckylooke/dragular\n * Angular version of dragula https://github.com/bevacqua/dragula\n */\n var dragularModule = require('./dragularModule');\n\n/**\n* @ngInject\n*/\n\ndragularModule.directive('dragular', ['dragularService', function(dragularService) {\n  return {\n    restrict: 'A',\n    link: function($scope, iElm, iAttrs) {\n\n      var options = $scope.$eval(iAttrs.dragular) || tryJson(iAttrs.dragular) || {};\n\n      function tryJson(json) {\n        try { // I dont like try catch solutions but I havent find sattisfying way of chcecking json validity.\n          return JSON.parse(json);\n        } catch (e) {\n          return undefined;\n        }\n      }\n\n      if(iAttrs.dragularModel){\n        options = angular.extend({containersModel: $scope.$eval(iAttrs.dragularModel)}, options);\n      }else if(options && options.containersModel && typeof options.containersModel === 'string'){\n        options.containersModel = $scope.$eval(options.containersModel);\n      }\n\n      dragularService(iElm[0], options);\n    }\n  };\n}]);\n\n},{\"./dragularModule\":2}],2:[function(require,module,exports){\n/* global angular */\n'use strict';\n\n\n\n/**\n * Dragular 3.3.1 by Luckylooke https://github.com/luckylooke/dragular\n * Angular version of dragula https://github.com/bevacqua/dragula\n */\nmodule.exports = angular.module('dragularModule', []);\n\n({\"dragularDirective\":require(\"./dragularDirective.js\"),\"dragularService\":require(\"./dragularService.js\")});\n\n},{\"./dragularDirective.js\":1,\"./dragularService.js\":3}],3:[function(require,module,exports){\n/* global angular */\n'use strict';\n\n/**\n * dragular Service by Luckylooke https://github.com/luckylooke/dragular\n * Angular version of dragula https://github.com/bevacqua/dragula\n */\n\nvar dragularModule = require('./dragularModule');\n\n/**\n * @ngInject\n */\n\ndragularModule.factory('dragularService', ['$rootScope', function dragula($rootScope) {\n\n  var shared = { // function returned as service\n      classesCache: {}, // classes lookup cache\n      containersCtx: {}, // containers model\n      containers: {}, // containers managed by the drake\n      mirror: null, // mirror image\n      source: null, // source container\n      item: null, // item being dragged\n      copy: null, // isCopy flag\n      sourceItem: null, // item originaly dragged if copy is enabled\n      sourceModel: null, // source container model\n      target: null, // droppable container under drag item\n      targetCtx: null, // target container context\n      targetModel: null, // target container model\n      lastDropTarget: null, // last container item was over\n      offsetX: null, // reference x\n      offsetY: null, // reference y\n      moveX: null, // reference move x\n      moveY: null, // reference move y\n      offsetXr: null, // reference x right for boundingBox feature\n      offsetYb: null, // reference y bottom for boundingBox feature\n      clientX: null, // cache client x, init at grab, update at drag\n      clientY: null, // cache client y, init at grab, update at drag\n      mirrorWidth: null, // mirror width for boundingBox feature\n      mirrorHeight: null, // mirror height for boundingBox feature\n      initialSibling: null, // reference sibling when grabbed\n      currentSibling: null, // reference sibling now\n      initialIndex: null, // reference model index when grabbed\n      currentIndex: null, // reference model index now\n      isContainerModel: null, // if o.isContainer is used, model can be provided as well, here it is kept\n      dragOverEvents: {}, // drag over events fired on element behind cursor\n      lastElementBehindCursor: null, // last element behind cursor\n      grabbed: null // holds mousedown context until first mousemove\n    },\n    serviceFn = function(initialContainers, options) {\n\n      if (arguments.length === 1 && !Array.isArray(initialContainers) && !angular.isElement(initialContainers) && !initialContainers[0] && typeof initialContainers !== 'string') {\n        // then containers are not provided, only options\n        options = initialContainers;\n        initialContainers = [];\n      } else if (typeof initialContainers === 'string') {\n        initialContainers = document.querySelectorAll(initialContainers);\n      }\n\n      var doc = document,\n        body = doc.body,\n        docElm = doc.documentElement,\n        defaultClasses = {\n          mirror: 'gu-mirror',\n          hide: 'gu-hide',\n          unselectable: 'gu-unselectable',\n          transit: 'gu-transit'\n        },\n        isContainer, // internal isContainer\n        o = { // options\n          dragOverEventNames: ['dragularenter', 'dragularleave', 'dragularrelease'],\n          classes: defaultClasses,\n          containers: false,\n          moves: always,\n          accepts: always,\n          canBeAccepted: always,\n          isContainer: never,\n          copy: false,\n          invalid: invalidTarget,\n          revertOnSpill: false,\n          removeOnSpill: false,\n          lockX: false,\n          lockY: false,\n          boundingBox: false,\n          containersModel: false,\n          isContainerModel: emptyObj\n        };\n\n      if (!isElement(o.boundingBox)) {\n        o.boundingBox = null;\n      }\n\n      if (options && options.classes) {\n        angular.extend(defaultClasses, options.classes);\n        angular.extend(options.classes, defaultClasses);\n      }\n\n      angular.extend(o, options);\n\n      if (!o.mirrorContainer) {\n        o.mirrorContainer = doc.body;\n      }\n\n      // get initial containers from options or parameter or fall back to empty array (containers can be also added later)\n      initialContainers = o.containers || initialContainers || [];\n      initialContainers = makeArray(initialContainers);\n\n      if (o.containersModel) {\n        //                            is 2D array?\n        o.containersModel = Array.isArray(o.containersModel[0]) ? o.containersModel : [o.containersModel];\n      } else {\n        o.containersModel = [];\n      }\n\n      // feed containers groups and optionaly shadow it by models\n      if (!o.nameSpace) {\n        o.nameSpace = ['dragularCommon'];\n      }\n      if (!Array.isArray(o.nameSpace)) {\n        o.nameSpace = [o.nameSpace];\n      }\n      o.nameSpace.forEach(function eachNameSpace(nameSpace) {\n        if (!shared.containers[nameSpace]) {\n          shared.containers[nameSpace] = [];\n          shared.containersCtx[nameSpace] = [];\n        }\n        var len = initialContainers.length,\n          shLen = shared.containers[nameSpace].length;\n        for (var i = 0; i < len; i++) {\n          shared.containers[nameSpace][i + shLen] = initialContainers[i];\n          shared.containersCtx[nameSpace][i + shLen] = {\n            o: o,\n            m: o.containersModel[i] // can be undefined\n          };\n        }\n      });\n\n      //register events\n      events();\n\n      angular.forEach(o.dragOverEventNames, function prepareDragOverEvents(dragOverEvent) {\n        if (doc.createEvent) {\n          shared.dragOverEvents[dragOverEvent] = doc.createEvent('HTMLEvents');\n          shared.dragOverEvents[dragOverEvent].initEvent(dragOverEvent, true, true);\n        } else {\n          shared.dragOverEvents[dragOverEvent] = doc.createEventObject();\n          shared.dragOverEvents[dragOverEvent].eventType = dragOverEvent;\n        }\n      });\n\n      isContainer = function isContainer(el) {\n        if(!el){\n          return false;\n        }\n        var i = o.nameSpace.length;\n        while (i--) {\n          if (shared.containers[o.nameSpace[i]].indexOf(el) !== -1) {\n            return true;\n          }\n        }\n        if (o.isContainer(el)) {\n          shared.isContainerModel = o.isContainerModel(el);\n          return true;\n        } else {\n          shared.isContainerModel = null;\n        }\n        return false;\n      };\n\n      var drake = {\n        containers: shared.containers,\n        containersCtx: shared.containersCtx,\n        isContainer: isContainer,\n        start: manualStart,\n        end: end,\n        cancel: cancel,\n        remove: remove,\n        destroy: destroy,\n        dragging: false\n      };\n\n      return drake;\n\n      // make array from array-like objects or from single element (based on bevacqua/atoa)\n      function makeArray(all, startIndex) {\n        if (Array.isArray(all)) {\n          return all;\n        }\n        if (all.length) { // is array-like\n          return Array.prototype.slice.call(all, startIndex);\n        } else { // is one element\n          return [all];\n        }\n      }\n\n      // add or remove containers - deprecated\n      function removeContainers(all) {\n        $rootScope.$applyAsync(function applyDestroyed() {\n          var changes = Array.isArray(all) ? all : makeArray(all);\n          changes.forEach(function forEachContainer(container) {\n            angular.forEach(o.nameSpace, function forEachNs(nameSpace) {\n              var index;\n              index = shared.containers[nameSpace].indexOf(container);\n              shared.containers[nameSpace].splice(index, 1);\n              shared.containersCtx[nameSpace].splice(index, 1);\n            });\n          });\n        });\n      }\n\n      function events(remove) {\n        var op = remove ? 'off' : 'on';\n        regEvent(docElm, op, 'mouseup', release);\n        // regEvent(docElm, op, 'mousemove', startBecauseMouseMoved);\n\n        initialContainers.forEach(function addMouseDown(container) {\n          regEvent(container, 'on', 'mousedown', grab);\n        });\n      }\n\n      function eventualMovements(remove) {\n        var op = remove ? 'off' : 'on';\n        regEvent(docElm, op, 'mousemove', startBecauseMouseMoved);\n      }\n\n      function movements(remove) {\n        var op = remove ? 'off' : 'on';\n        regEvent(docElm, op, 'selectstart', preventGrabbed); // IE8\n        regEvent(docElm, op, 'click', preventGrabbed);\n        regEvent(docElm, op, 'touchmove', preventGrabbed); // fixes touch devices scrolling while drag\n      }\n\n      function destroy() {\n        events(true);\n        removeContainers(initialContainers);\n        release({});\n      }\n\n      function preventGrabbed(e) {\n        if (shared.grabbed) {\n          e.preventDefault();\n        }\n      }\n\n      function grab(e) {\n        e = e || window.event;\n        shared.moveX = e.clientX;\n        shared.moveY = e.clientY;\n\n        // filter some odd situations\n        if (whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey) {\n          return; // we only care about honest-to-god left clicks and touch events\n        }\n\n        var context = canStart(e.target);\n        if (!context || !context.item) {\n          return;\n        }\n\n        shared.grabbed = context;\n        eventualMovements();\n        if (e.type === 'mousedown') {\n          if (isInput(context.item)) { // see also: https://github.com/bevacqua/dragula/issues/208\n            context.item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\n          } else {\n            e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\n          }\n        }\n      }\n\n      function startBecauseMouseMoved(e) {\n        if (!shared.grabbed || drake.dragging) {\n          return;\n        }\n        if (whichMouseButton(e) === 0) {\n          release({});\n          return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\n        }\n        // truthy check fixes #239, equality fixes #207\n        if (e.clientX && e.clientX === shared.moveX && e.clientY && e.clientY === shared.moveY) {\n          return;\n        }\n        if (o.ignoreInputTextSelection) {\n          var clientX = getCoord('clientX', e),\n            clientY = getCoord('clientY', e),\n            elementBehindCursor = doc.elementFromPoint(clientX, clientY);\n          if (isInput(elementBehindCursor)) {\n            return;\n          }\n        }\n\n        var grabbed = shared.grabbed; // call to end() unsets shared.grabbed\n        eventualMovements(true); // remove mousemove listener\n        movements();\n        end();\n        start(grabbed);\n\n        // automaticly detect direction of elements if not set in options\n        if (!o.direction && getParent(shared.sourceItem)) {\n          var parent = shared.sourceItem.parentNode,\n            parentHeight = parent.offsetHeight,\n            parentWidth = parent.offsetWidth,\n            childHeight = shared.sourceItem.clientHeight,\n            childWidth = shared.sourceItem.clientWidth;\n          o.direction = parentHeight / childHeight < parentWidth / childWidth ? 'horizontal' : 'vertical';\n        }\n\n        // get initial coordinates, used to render shared.mirror for first time\n        var offset = getOffset(shared.sourceItem);\n        shared.offsetX = getCoord('pageX', e) - offset.left;\n        shared.offsetY = getCoord('pageY', e) - offset.top;\n        shared.clientX = getCoord('clientX', e);\n        shared.clientY = getCoord('clientY', e);\n\n        // limiting area of shared.mirror movement, get initial coordinates\n        if (o.boundingBox) {\n          shared.offsetXr = getCoord('pageX', e) - offset.right;\n          shared.offsetYb = getCoord('pageY', e) - offset.bottom;\n        }\n\n        e.preventDefault();\n\n        addClass(shared.item, o.classes.transit);\n        renderMirrorImage();\n        // initial position\n        shared.mirror.style.left = shared.clientX - shared.offsetX + 'px';\n        shared.mirror.style.top = shared.clientY - shared.offsetY + 'px';\n\n        drag(e);\n      }\n\n\n      function canStart(item) {\n        if (drake.dragging && shared.mirror) {\n          return; // already dragging\n        }\n\n        var handle = item;\n\n        while (getParent(item) && !isContainer(getParent(item))) {\n          // break loop if user tries to drag item which is considered invalid handle\n          if (o.invalid(item, handle)) {\n            return;\n          }\n          item = getParent(item); // drag target should be immediate child of container\n          if (!item) {\n            return;\n          }\n        }\n\n        var source = getParent(item);\n        if (!source ||\n          o.invalid(item, handle) ||\n          !o.moves(item, source, handle, nextEl(item))) {\n          return;\n        }\n\n        return {\n          item: item,\n          source: source\n        };\n      }\n\n      function manualStart(item) {\n        var context = canStart(item);\n        if (context) {\n          start(context);\n        }\n      }\n\n      function start(context) {\n        shared.sourceItem = shared.item = context.item;\n        shared.source = context.source;\n        shared.initialSibling = shared.currentSibling = nextEl(context.item);\n\n        if (isCopy(context.item, context.source)) {\n          shared.item = context.item.cloneNode(true);\n          shared.copy = true;\n          if (o.scope) {\n            o.scope.$emit('dragularcloned', shared.item, context.item);\n          }\n        } else {\n          shared.copy = false;\n        }\n\n        // prepare models operations\n        var containerIndex = initialContainers.indexOf(context.source);\n        shared.sourceModel = o.containersModel[containerIndex];\n        shared.initialIndex = domIndexOf(context.item, context.source);\n\n        drake.dragging = true;\n        if (o.scope) {\n          o.scope.$emit('dragulardrag', shared.sourceItem, shared.source);\n        }\n\n        return true;\n      }\n\n      function invalidTarget() {\n        return false;\n      }\n\n      function end() {\n        if (!drake.dragging || !shared.item) {\n          return;\n        }\n        drop(shared.item, getParent(shared.item));\n      }\n\n      function ungrab() {\n        shared.grabbed = false;\n        eventualMovements('remove');\n        movements('remove');\n      }\n\n      function release(e) {\n        ungrab();\n        if (!drake.dragging) {\n          return;\n        }\n        e = e || window.event;\n\n        shared.clientX = getCoord('clientX', e);\n        shared.clientY = getCoord('clientY', e);\n\n        var elementBehindCursor = getElementBehindPoint(shared.mirror, shared.clientX, shared.clientY),\n          dropTarget = findDropTarget(elementBehindCursor, shared.clientX, shared.clientY);\n\n        if (dropTarget && ((shared.copy && o.copySortSource) || (!shared.copy || dropTarget !== shared.source))) {\n          // found valid target and (is not copy case or target is not initial container)\n          drop(shared.item, dropTarget);\n        } else if (o.removeOnSpill) {\n          remove();\n        } else {\n          cancel();\n        }\n\n        // after release there is no container hovered\n        shared.target = null;\n\n        if (shared.lastElementBehindCursor) {\n          fireEvent(shared.lastElementBehindCursor, shared.dragOverEvents['dragularrelease'], elementBehindCursor);\n        }\n\n        if (o.scope) {\n          o.scope.$emit('dragularrelease', shared.item, shared.source);\n        }\n      }\n\n      function drop(item, target) {\n        if (shared.copy && o.copySortSource && target === shared.source && getParent(item)) {\n          item.parentNode.removeChild(shared.sourceItem);\n        }\n\n        var dropIndex = domIndexOf(item, target);\n\n        if (shared.sourceModel && !isInitialPlacement(target)) {\n          var dropElm = item;\n          $rootScope.$applyAsync(function applyDrop() {\n            if (target === shared.source) {\n              shared.sourceModel.splice(dropIndex, 0, shared.sourceModel.splice(shared.initialIndex, 1)[0]);\n            } else {\n              shared.dropElmModel = shared.copy ? angular.copy(shared.sourceModel[shared.initialIndex]) : shared.sourceModel[shared.initialIndex];\n\n              if (!shared.isContainerModel) {\n                shared.targetModel = shared.targetCtx.m;\n              } else {\n                shared.targetModel = shared.isContainerModel;\n              }\n\n              target.removeChild(dropElm); // element must be removed for ngRepeat to apply correctly\n\n              if (!shared.copy) {\n                shared.sourceModel.splice(shared.initialIndex, 1);\n              }\n              shared.targetModel.splice(dropIndex, 0, shared.dropElmModel);\n            }\n\n            if (getParent(item)) {\n              item.parentNode.removeChild(item);\n            }\n\n            emitDropEvent();\n            cleanup();\n          });\n        } else {\n          emitDropEvent();\n          cleanup();\n        }\n\n        function emitDropEvent() {\n          if (o.scope) {\n            if (isInitialPlacement(target)) {\n              o.scope.$emit('dragularcancel', item, shared.source, shared.sourceModel, shared.initialIndex);\n            } else {\n              o.scope.$emit('dragulardrop', item, target, shared.source, shared.sourceModel, shared.initialIndex, shared.targetModel, dropIndex);\n            }\n          }\n        }\n      }\n\n      function remove() {\n        if (!drake.dragging) {\n          return;\n        }\n        var parent = getParent(shared.item);\n\n        if (parent) {\n          parent.removeChild(shared.item);\n        }\n\n        if (shared.sourceModel) {\n          $rootScope.$applyAsync(function removeModel() {\n            shared.sourceModel.splice(shared.initialIndex, 1);\n            cleanup();\n          });\n        }\n\n        if (o.scope) {\n          o.scope.$emit(shared.copy ? 'dragularcancel' : 'dragularremove', shared.item, parent, shared.sourceModel, shared.initialIndex);\n        }\n        if (!shared.sourceModel) {\n          cleanup();\n        }\n      }\n\n      function cancel(revert) {\n        if (!drake.dragging) {\n          return;\n        }\n        var reverts = arguments.length > 0 ? revert : o.revertOnSpill,\n          parent = getParent(shared.item);\n\n        var initial = isInitialPlacement(parent);\n        if (!initial && !shared.copy && reverts) {\n          shared.source.insertBefore(shared.item, shared.initialSibling);\n        }\n        if (shared.sourceModel && !shared.copy && !reverts) {\n          drop(shared.item, parent);\n        } else if (o.scope) {\n          if (initial || reverts) {\n            o.scope.$emit('dragularcancel', shared.item, shared.source);\n          }\n        }\n\n        if (!shared.sourceModel || shared.copy || reverts || initial) {\n          cleanup();\n        }\n      }\n\n      function cleanup() {\n        ungrab();\n        removeMirrorImage();\n\n        if (shared.item) {\n          rmClass(shared.item, o.classes.transit);\n        }\n\n        drake.dragging = false;\n\n        if (o.removeOnSpill === true) {\n          spillOut();\n        }\n\n        if (o.scope) {\n          if(shared.lastDropTarget){\n           o.scope.$emit('dragularout', shared.item, shared.lastDropTarget, shared.source);\n          }\n          o.scope.$emit('dragulardragend', shared.item);\n        }\n\n        shared.source = shared.item = shared.sourceItem = shared.initialSibling = shared.currentSibling = shared.sourceModel = null;\n        shared.initialIndex = shared.currentIndex = shared.lastDropTarget = shared.isContainerModel = shared.targetModel = null;\n        shared.dropElmModel = shared.targetCtx = shared.copy = shared.moveX = shared.moveY = null;\n      }\n\n      // is item currently placed in original container and original position?\n      function isInitialPlacement(target, s) {\n        var sibling = s || (shared.mirror ? shared.currentSibling : nextEl(shared.item));\n        return target === shared.source && sibling === shared.initialSibling;\n      }\n\n      // find valid drop container\n      function findDropTarget(elementBehindCursor, clientX, clientY) {\n        var target = elementBehindCursor;\n\n        while (target && !accepted()) {\n          target = getParent(target);\n        }\n        return target;\n\n        function accepted() {\n          var accepts = false;\n\n          if (isContainer(target)) { // is droppable?\n\n            var immediate = getImmediateChild(target, elementBehindCursor),\n              reference = getReference(target, immediate, clientX, clientY),\n              initial = isInitialPlacement(target, reference),\n              i = o.nameSpace.length;\n\n            while (i--) {\n              if (shared.containers[o.nameSpace[i]].indexOf(target) !== -1) {\n                shared.targetCtx = shared.containersCtx[o.nameSpace[i]][shared.containers[o.nameSpace[i]].indexOf(target)];\n                break;\n              }\n              if (!shared.targetCtx) {\n                shared.targetCtx = shared.containersCtx['dragularCommon'][shared.containers['dragularCommon'].indexOf(target)];\n              }\n            }\n\n            accepts = initial ||\n              (shared.targetCtx.o.accepts(shared.item, target, shared.source, reference, shared.sourceModel, shared.initialIndex) &&\n                o.canBeAccepted(shared.item, target, shared.source, reference, shared.sourceModel, shared.initialIndex));\n\n            if (shared.target !== target) { // used for scroll issue\n              shared.target = target;\n            }\n          }\n          return accepts;\n        }\n      }\n\n      function drag(e) {\n        if (!shared.mirror) {\n          return;\n        }\n        e = e || window.event;\n\n        // update coordinates\n        shared.clientX = getCoord('clientX', e);\n        shared.clientY = getCoord('clientY', e);\n\n        // count mirror coordiates\n        var x = shared.clientX - shared.offsetX,\n          y = shared.clientY - shared.offsetY,\n          pageX,\n          pageY,\n          offsetBox;\n\n        // fill extra properties if boundingBox is used\n        if (o.boundingBox) {\n          pageX = getCoord('pageX', e);\n          pageY = getCoord('pageY', e);\n          offsetBox = getOffset(o.boundingBox);\n        }\n\n        if (!o.lockY) {\n          if (!o.boundingBox || (pageX > offsetBox.left + shared.offsetX && pageX < offsetBox.right + shared.offsetXr)) {\n            shared.mirror.style.left = x + 'px';\n          } else if (o.boundingBox) { // check again in case user scrolled the view\n            if (pageX < offsetBox.left + shared.offsetX) {\n              shared.mirror.style.left = shared.clientX - (pageX - offsetBox.left) + 'px';\n            } else {\n              shared.mirror.style.left = shared.clientX - shared.mirrorWidth - (pageX - offsetBox.right) + 'px';\n            }\n          }\n        }\n        if (!o.lockX) {\n          if (!o.boundingBox || (pageY > offsetBox.top + shared.offsetY && pageY < offsetBox.bottom + shared.offsetYb)) {\n            shared.mirror.style.top = y + 'px';\n          } else if (o.boundingBox) { // check again in case user scrolled the view\n            if (pageY < offsetBox.top + shared.offsetY) {\n              shared.mirror.style.top = shared.clientY - (pageY - offsetBox.top) + 'px';\n            } else {\n              shared.mirror.style.top = shared.clientY - shared.mirrorHeight - (pageY - offsetBox.bottom) + 'px';\n            }\n          }\n        }\n\n        var elementBehindCursor = getElementBehindPoint(shared.mirror, shared.clientX, shared.clientY),\n          dropTarget = findDropTarget(elementBehindCursor, shared.clientX, shared.clientY),\n          changed = dropTarget !== shared.lastDropTarget;\n\n        if (elementBehindCursor !== shared.lastElementBehindCursor) {\n          fireEvent(elementBehindCursor, shared.dragOverEvents['dragularenter'], !!dropTarget);\n          if (shared.lastElementBehindCursor) {\n            fireEvent(shared.lastElementBehindCursor, shared.dragOverEvents['dragularleave'], elementBehindCursor);\n          }\n          shared.lastElementBehindCursor = elementBehindCursor;\n        }\n\n        if (changed) {\n          out();\n          shared.lastDropTarget = dropTarget;\n          over();\n        }\n\n        // do not copy in same container\n        if (dropTarget === shared.source && shared.copy && !o.copySortSource) {\n          if (getParent(shared.item)) {\n            shared.item.parentNode.removeChild(shared.item);\n          }\n          return;\n        }\n\n        var reference,\n          immediate = getImmediateChild(dropTarget, elementBehindCursor);\n\n        if (immediate !== null) {\n          reference = getReference(dropTarget, immediate, shared.clientX, shared.clientY);\n        } else if (o.revertOnSpill === true && !shared.copy) {\n          // the case that mirror is not over valid target and reverting is on and copy is off\n          reference = shared.initialSibling;\n          dropTarget = shared.source;\n        } else {\n          // the case that mirror is not over valid target and removing is on or copy is on\n          if (shared.copy && getParent(shared.item)) {\n            // remove item or copy of item\n            shared.item.parentNode.removeChild(shared.item);\n          }\n          return;\n        }\n        if (reference === null ||\n          reference !== shared.item &&\n          reference !== nextEl(shared.item) &&\n          reference !== shared.currentSibling) {\n          // moving item/copy to new container from previous one\n          shared.currentSibling = reference;\n\n          dropTarget.insertBefore(shared.item, reference); // if reference is null item is inserted at the end\n\n          if (o.scope) {\n            o.scope.$emit('dragularshadow', shared.item, dropTarget);\n          }\n        }\n\n        function moved(type) {\n          if (o.scope) {\n            o.scope.$emit('dragular' + type, shared.item, shared.lastDropTarget, shared.source);\n          }\n          if (o.removeOnSpill === true) {\n            type === 'over' ? spillOver() : spillOut();\n          }\n        }\n\n        function over() {\n          if (changed) {\n            moved('over');\n          }\n        }\n\n        function out() {\n          if (shared.lastDropTarget) {\n            moved('out');\n          }\n        }\n      }\n\n      function spillOver() {\n        rmClass(shared.item, o.classes.hide);\n      }\n\n      function spillOut() {\n        if (drake.dragging) {\n          addClass(shared.item, o.classes.hide);\n        }\n      }\n\n      function scrollContainer(e) {\n        if (shared.target) {\n          var before = shared.target.scrollTop;\n          shared.target.scrollTop += e.deltaY;\n          // block scroll of the document when container can be scrolled\n          if (before !== shared.target.scrollTop) {\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        }\n      }\n\n      function renderMirrorImage() {\n        if (shared.mirror) {\n          return;\n        }\n        var rect = shared.sourceItem.getBoundingClientRect();\n        shared.mirror = shared.sourceItem.cloneNode(true);\n        shared.mirrorWidth = rect.width;\n        shared.mirrorHeight = rect.height;\n        shared.mirror.style.width = getRectWidth(rect) + 'px';\n        shared.mirror.style.height = getRectHeight(rect) + 'px';\n        rmClass(shared.mirror, o.classes.transit);\n        addClass(shared.mirror, o.classes.mirror);\n        o.mirrorContainer.appendChild(shared.mirror);\n        regEvent(docElm, 'on', 'mousemove', drag);\n        addClass(body, o.classes.unselectable);\n        regEvent(shared.mirror, 'on', 'wheel', scrollContainer);\n        if (o.scope) {\n          o.scope.$emit('dragularcloned', shared.mirror, shared.sourceItem);\n        }\n      }\n\n      function removeMirrorImage() {\n        if (shared.mirror) {\n          rmClass(body, o.classes.unselectable);\n          regEvent(docElm, 'off', 'mousemove', drag);\n          regEvent(shared.mirror, 'off', 'wheel', scrollContainer);\n          if(getParent(shared.mirror)){\n            shared.mirror.parentNode.removeChild(shared.mirror);\n          }\n          shared.mirror = null;\n        }\n      }\n\n      function getImmediateChild(dropTarget, target) {\n        var immediate = target;\n        while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {\n          immediate = getParent(immediate);\n        }\n        if (immediate === docElm) {\n          return null;\n        }\n        return immediate;\n      }\n\n      function getReference(dropTarget, target, x, y) {\n        var horizontal = o.direction === 'horizontal',\n          reference = target !== dropTarget ? inside() : outside();\n        return reference;\n\n        function outside() { // slower, but able to figure out any position\n          var len = dropTarget.children.length,\n            i, el, rect;\n          for (i = 0; i < len; i++) {\n            el = dropTarget.children[i];\n            rect = el.getBoundingClientRect();\n            if (horizontal && rect.left > x) {\n              return el;\n            }\n            if (!horizontal && rect.top > y) {\n              return el;\n            }\n          }\n          return null;\n        }\n\n        function inside() { // faster, but only available if dropped inside a child element\n          var rect = target.getBoundingClientRect();\n          if (horizontal) {\n            return resolve(x > rect.left + getRectWidth(rect) / 2);\n          }\n          return resolve(y > rect.top + getRectHeight(rect) / 2);\n        }\n\n        function resolve(after) {\n          return after ? nextEl(target) : target;\n        }\n      }\n\n      function isCopy(item, container) {\n        return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\n      }\n\n      function getScroll(scrollProp, offsetProp) {\n        if (typeof window[offsetProp] !== 'undefined') {\n          return window[offsetProp];\n        }\n        if (docElm.clientHeight) {\n          return docElm[scrollProp];\n        }\n        return body[scrollProp];\n      }\n\n      function getOffset(el) {\n        var rect = el.getBoundingClientRect(),\n          scrollTop = getScroll('scrollTop', 'pageYOffset'),\n          scrollLeft = getScroll('scrollLeft', 'pageXOffset');\n        return {\n          left: rect.left + scrollLeft,\n          right: rect.right + scrollLeft,\n          top: rect.top + scrollTop,\n          bottom: rect.bottom + scrollTop\n        };\n      }\n\n      function getElementBehindPoint(point, x, y) {\n        var p = point || {},\n          state = p.className,\n          el;\n        p.className += ' ' + o.classes.hide;\n        el = doc.elementFromPoint(x, y);\n        p.className = state;\n        return el;\n      }\n    }; // end of serviceFn\n\n  // clean common/shared objects\n  serviceFn.cleanEnviroment = function cleanEnviroment() {\n    shared.classesCache = {};\n    shared.containersCtx = {};\n    shared.containers = {};\n    shared.mirror = undefined;\n  };\n\n  serviceFn.shared = shared;\n\n  return serviceFn;\n\n  /****************************************************************************************************************************/\n  /****************************************************************************************************************************/\n  /****************************************************************************************************************************/\n\n  // HELPERS FUNCTIONS:\n\n  function regEvent(el, op, type, fn) {\n    var touch = {\n        mouseup: 'touchend',\n        mousedown: 'touchstart',\n        mousemove: 'touchmove'\n      },\n      $el = angular.element(el);\n\n    if (touch[type]) {\n      $el[op](touch[type], fn);\n    }\n    $el[op](type, fn);\n  }\n\n  function never() {\n    return false;\n  }\n\n  function always() {\n    return true;\n  }\n\n  function getRectWidth(rect) {\n    return rect.width || (rect.right - rect.left);\n  }\n\n  function getRectHeight(rect) {\n    return rect.height || (rect.bottom - rect.top);\n  }\n\n  function emptyObj() {\n    return {};\n  }\n\n  function nextEl(el) {\n    return el.nextElementSibling || manually();\n\n    function manually() {\n      var sibling = el;\n      do {\n        sibling = sibling.nextSibling;\n      } while (sibling && sibling.nodeType !== 1);\n      return sibling;\n    }\n  }\n\n  //Cannot use angular.isElement because we need to check plain dom element, no jQlite wrapped\n  function isElement(o) {\n    return (\n      typeof HTMLElement === 'object' ? o instanceof HTMLElement : //DOM2\n      o && typeof o === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string'\n    );\n  }\n\n  function lookupClass(className) {\n    var cached = shared.classesCache[className];\n    if (cached) {\n      cached.lastIndex = 0;\n    } else {\n      shared.classesCache[className] = cached = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)', 'g');\n    }\n    return cached;\n  }\n\n  function addClass(el, className) {\n    var current = el.className;\n    if (!current.length) {\n      el.className = className;\n    } else if (!lookupClass(className).test(current)) {\n      el.className += ' ' + className;\n    }\n  }\n\n  function rmClass(el, className) {\n    el.className = el.className.replace(lookupClass(className), ' ').trim();\n  }\n\n  function getEventHost(e) {\n    // on touchend event, we have to use `e.changedTouches`\n    // see http://stackoverflow.com/questions/7192563/touchend-event-properties\n    // see https://github.com/bevacqua/dragula/issues/34\n    if (e.targetTouches && e.targetTouches.length) {\n      return e.targetTouches[0];\n    }\n    if (e.changedTouches && e.changedTouches.length) {\n      return e.changedTouches[0];\n    }\n    return e;\n  }\n\n  function getCoord(coord, e) {\n    var host = getEventHost(e);\n    var missMap = {\n      pageX: 'clientX', // IE8\n      pageY: 'clientY' // IE8\n    };\n    if (coord in missMap && !(coord in host) && missMap[coord] in host) {\n      coord = missMap[coord];\n    }\n\n    // Adding support for touch events, as they are not functional in the original\n    if (!host.type || host.type.indexOf('touch') < 0) {\n      return host[coord];\n    } else {\n      if (host.type.indexOf('end') > -1) {\n        // Nothing should happen for touchend\n        return;\n      } else {\n        // No clientX or clientY in a touch event\n        return host.originalEvent.touches[0][coord.replace('client', 'page')];\n      }\n    }\n  }\n\n  function whichMouseButton (e) {\n    if (e.touches !== void 0) { return e.touches.length; }\n    if (e.buttons !== undefined) { return e.buttons; }\n    if (e.which !== undefined) { return e.which; }\n    var button = e.button;\n    if (button !== undefined) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\n      return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);\n    }\n  }\n\n  function getParent (el) {\n    return el.parentNode === document ? null : el.parentNode;\n  }\n\n  function isInput (el) {\n    return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el);\n  }\n\n  function isEditable (el) {\n    if (!el) { return false; } // no parents were editable\n    if (el.contentEditable === 'false') { return false; } // stop the lookup\n    if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\n    return isEditable(getParent(el)); // contentEditable is set to 'inherit'\n  }\n\n  function domIndexOf(child, parent) {\n    return Array.prototype.indexOf.call(angular.element(parent).children(), child);\n  }\n\n  function fireEvent(target, e, extra) {\n    if (!target) {\n      return;\n    }\n    shared.extra = extra;\n    if (target.dispatchEvent) {\n      target.dispatchEvent(e);\n    } else {\n      target.fireEvent('on' + e.eventType, e);\n    }\n  }\n\n}]);\n\n},{\"./dragularModule\":2}]},{},[2]);\n"],"sourceRoot":"/source/"}